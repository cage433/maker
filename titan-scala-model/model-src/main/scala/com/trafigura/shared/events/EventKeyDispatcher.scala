/**
 * WARNING: This file was automatically generated by the Trading Hub tooling version .
 * Any manual changes may be overwritten and lost!
 */


// Generated from model_dispatcher.rb

package com.trafigura.shared.events

/**
 * Dispatcher that will send messages of the given type via the messaging transport.
 */
trait EventKeyDispatcher {
  /**
   * Dispatches a single com.trafigura.shared.events.EventKey.
   */
  def dispatchEventKey(obj:com.trafigura.shared.events.EventKey):Unit = dispatchEventKey(List(obj), Map[String, String]())

  /**
   * Dispatches a single com.trafigura.shared.events.EventKey.
   */
  def dispatchEventKey(obj:com.trafigura.shared.events.EventKey, metadata:Map[String, String]):Unit =
    dispatchEventKey(List(obj), metadata)

  /**
   * Dispatches a list of com.trafigura.shared.events.EventKey entities. These entities will be sent as a single
   * batch, and will be received by a corresponding receiver in the same grouping.
   */
  def dispatchEventKey(objs:List[com.trafigura.shared.events.EventKey]):Unit =
    dispatchEventKey(objs, Map[String, String]())

  /**
   * Dispatches a list of com.trafigura.shared.events.EventKey entities. These entities will be sent as a single
   * batch, and will be received by a corresponding receiver in the same grouping.
   */
  def dispatchEventKey(objs:List[com.trafigura.shared.events.EventKey], metadata:Map[String, String]):Unit
}
