/**
 * WARNING: This file was automatically generated by the Trading Hub tooling version 2.15.
 * Any manual changes may be overwritten and lost!
 */


// Generated from model_object_scala.erb

package com.trafigura.edm.shared.types





import com.trafigura.tradinghub.support._
import scala.collection.JavaConversions._




 class PercentageTolerance extends com.trafigura.edm.shared.types.Tolerance  {
  


  
    

var plus:com.trafigura.edm.shared.types.Percentage = null
    
    
    

var minus:com.trafigura.edm.shared.types.Percentage = null
    
    





  override def equals(o: Any) = o match {
    case r: AnyRef =>
        if (o.isInstanceOf[com.trafigura.edm.shared.types.PercentageTolerance]) {
            val that = r.asInstanceOf[com.trafigura.edm.shared.types.PercentageTolerance]
            that.canEqual(this) && this.minus == that.minus && this.plus == that.plus &&  true
        }
        else false
    case _ => false
  }

  override def canEqual(that : Any) = that.isInstanceOf[com.trafigura.edm.shared.types.PercentageTolerance]

  override def hashCode = {
    (41 * (41 *  1
    ) +
         (if (minus == null) 0 else minus.hashCode) 
    ) +
         (if (plus == null) 0 else plus.hashCode) 
    
  }

  override def toString = {
    "{com.trafigura.edm.shared.types.PercentageTolerance: " + "" + "minus = " + minus + ", " + "plus = " + plus +  "}"
  }


  
        override def toJson() : org.codehaus.jettison.json.JSONObject = {
      toJson(new SerialisationHelper)
    }

    override def toJson(differentiator: SerialisationHelper) : org.codehaus.jettison.json.JSONObject = {
        var result = super.toJson(differentiator);

        result.put("_node", differentiator.idFor(this))

        result.put("Type", "EDM.shared.types.PercentageTolerance@1@1.0")
        
          
          
          
          
            result.putOpt("Plus", (this.plus) match { case null => null; case o => o.toJson(differentiator) });
          
        
          
          
          
          
            result.putOpt("Minus", (this.minus) match { case null => null; case o => o.toJson(differentiator) });
          
        
        return result;
    }

    override def loadJson(jobj : org.codehaus.jettison.json.JSONObject, cache: DeserialisationHelper) = {
        
            super.loadJson(jobj, cache);
        
        
          
              plus = (jobj.opt("Plus")) match { case null => null; case o: org.codehaus.jettison.json.JSONObject => cache.objectFor(o).getOrElse(cache.seen(o, com.trafigura.edm.shared.types.Percentage.fromJson(o, cache))) }
          
              minus = (jobj.opt("Minus")) match { case null => null; case o: org.codehaus.jettison.json.JSONObject => cache.objectFor(o).getOrElse(cache.seen(o, com.trafigura.edm.shared.types.Percentage.fromJson(o, cache))) }
          
        
    }

  
}

object PercentageTolerance {
  def version = ModelVersion("1")
  def wireFormatVersion = ModelVersion("1.0")

  
        val jsonTypeName = "EDM.shared.types.PercentageTolerance"

    def fromJson(jobj : org.codehaus.jettison.json.JSONObject, cache: DeserialisationHelper = new DeserialisationHelper) : com.trafigura.edm.shared.types.PercentageTolerance = {
      val v = TypeHolder(jobj.optString("Type"))

      v.assertModelVersion(version, "com.trafigura.edm.shared.types.PercentageTolerance")
      v.assertWireFormatVersion(wireFormatVersion, "com.trafigura.edm.shared.types.PercentageTolerance")

      
        
              v.typeName match {
              
                case _ =>
                  
                     val result = new com.trafigura.edm.shared.types.PercentageTolerance()
                     result.loadJson(jobj, cache)
                     result
                  
            }
        
      
    }

  

  

  
    def apply(plus: com.trafigura.edm.shared.types.Percentage = null, minus: com.trafigura.edm.shared.types.Percentage = null) = {
      val res = new com.trafigura.edm.shared.types.PercentageTolerance
      
        res.plus = plus
      
        res.minus = minus
      
      res
    }
  
}
