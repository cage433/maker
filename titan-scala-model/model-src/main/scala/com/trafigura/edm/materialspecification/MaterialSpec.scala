/**
 * WARNING: This file was automatically generated by the Trading Hub tooling version 2.15.
 * Any manual changes may be overwritten and lost!
 */


// Generated from model_object_scala.erb

package com.trafigura.edm.materialspecification





import com.trafigura.tradinghub.support._
import scala.collection.JavaConversions._




 class MaterialSpec extends com.trafigura.tradinghub.support.ModelObject  {
  


  
    

var comments:String = null
    
    





  override def equals(o: Any) = o match {
    case r: AnyRef =>
        if (o.isInstanceOf[com.trafigura.edm.materialspecification.MaterialSpec]) {
            val that = r.asInstanceOf[com.trafigura.edm.materialspecification.MaterialSpec]
            that.canEqual(this) && this.comments == that.comments &&  true
        }
        else false
    case _ => false
  }

  override def canEqual(that : Any) = that.isInstanceOf[com.trafigura.edm.materialspecification.MaterialSpec]

  override def hashCode = {
    (41 *  1
    ) +
         (if (comments == null) 0 else comments.hashCode) 
    
  }

  override def toString = {
    "{com.trafigura.edm.materialspecification.MaterialSpec: " + "" + "comments = " + comments +  "}"
  }


  
         def toJson() : org.codehaus.jettison.json.JSONObject = {
      toJson(new SerialisationHelper)
    }

     def toJson(differentiator: SerialisationHelper) : org.codehaus.jettison.json.JSONObject = {
        var result = new org.codehaus.jettison.json.JSONObject();

        result.put("_node", differentiator.idFor(this))

        result.put("Type", "EDM.MaterialSpecification.MaterialSpec@1@1.0")
        
          
          
          
          
            result.putOpt("Comments", this.comments);
          
        
        return result;
    }

     def loadJson(jobj : org.codehaus.jettison.json.JSONObject, cache: DeserialisationHelper) = {
        
        
          
              comments = JSONConversions.optional[String](jobj.opt("Comments"), null)
          
        
    }

  
}

object MaterialSpec {
  def version = ModelVersion("1")
  def wireFormatVersion = ModelVersion("1.0")

  
        val jsonTypeName = "EDM.MaterialSpecification.MaterialSpec"

    def fromJson(jobj : org.codehaus.jettison.json.JSONObject, cache: DeserialisationHelper = new DeserialisationHelper) : com.trafigura.edm.materialspecification.MaterialSpec = {
      val v = TypeHolder(jobj.optString("Type"))

      v.assertModelVersion(version, "com.trafigura.edm.materialspecification.MaterialSpec")
      v.assertWireFormatVersion(wireFormatVersion, "com.trafigura.edm.materialspecification.MaterialSpec")

      
        
              v.typeName match {
              
                case "EDM.MaterialSpecification.ProductSpec" =>
                  
                     val result = new com.trafigura.edm.materialspecification.ProductSpec()
                     result.loadJson(jobj, cache)
                     result
                  
              
                case "EDM.MaterialSpecification.CommoditySpec" =>
                  
                     val result = new com.trafigura.edm.materialspecification.CommoditySpec()
                     result.loadJson(jobj, cache)
                     result
                  
              
                case "EDM.MaterialSpecification.RefinedMetalSpec" =>
                  
                     val result = new com.trafigura.edm.materialspecification.RefinedMetalSpec()
                     result.loadJson(jobj, cache)
                     result
                  
              
                case _ =>
                  
                     val result = new com.trafigura.edm.materialspecification.MaterialSpec()
                     result.loadJson(jobj, cache)
                     result
                  
            }
        
      
    }

  

  
  val CommentsLength = 255
  

  
    def apply(comments: String = null) = {
      val res = new com.trafigura.edm.materialspecification.MaterialSpec
      
        res.comments = comments
      
      res
    }
  
}
