/**
 * WARNING: This file was automatically generated by the Trading Hub tooling version .
 * Any manual changes may be overwritten and lost!
 */


// Generated from model_receiver_amqp.rb

package com.trafigura.edm.fpc

import com.rabbitmq.messagepatterns.unicast.ReceivedMessage
import com.trafigura.tradinghub.support._
import org.codehaus.jettison.json.JSONArray

/**
 * Receiver that connects to an AMQP broker and receives incoming com.trafigura.edm.fpc.PricingFixation entities.
 */
class AMQPPricingFixationReceiver(ch:ConnectorHolder, val appName:String, val handler:com.trafigura.edm.fpc.PricingFixationHandler)
    extends AbstractAMQPReceiver(ch) {

  def queueName = "Trafigura.PricingFixation." + appName
  def onMessage(msg:ReceivedMessage, resultListener: MessageResultListener) {
    val payload = new String(msg.getBody, "UTF-8")
    val props = new AMQPMessageProperties(msg)
    val jsonArr = new JSONArray(payload)
    val objs = (0 until jsonArr.length).toList.map(idx => com.trafigura.edm.fpc.PricingFixation.fromJson(jsonArr.getJSONObject(idx), new DeserialisationHelper))
    handler.onPricingFixation(props, objs, resultListener)
  }
}
