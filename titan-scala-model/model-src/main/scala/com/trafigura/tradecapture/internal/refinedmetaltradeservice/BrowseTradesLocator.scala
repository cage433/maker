/**
 * WARNING: This file was automatically generated by the Trading Hub tooling version 2.15.
 * Any manual changes may be overwritten and lost!
 */


// Generated from model_service_locator.rb

package com.trafigura.tradecapture.internal.refinedmetaltradeservice

import com.trafigura.tradinghub.support._
import com.trafigura.tradinghub.discovery._
import org.jboss.resteasy.client._

import com.trafigura.tradecapture.internal.refinedmetal._
import com.trafigura.tradecapture.internal.refinedmetaltradeservice._
import com.trafigura.edm.shared.types._


/**
 * Locator for finding BrowseTrades instances.
 */
trait BrowseTradesLocator {
  /**
   * Provides a proxy for the given operation to run.
   */
  def proxy:BrowseTrades
}

class LocatableBrowseTrades(val locator:BrowseTradesLocator) extends BrowseTrades {
  
    def getTradeBlotterRowById(oid: Int): com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterRow =
      locator.proxy.getTradeBlotterRowById(oid)
  
    def getTradeBlotterRowByTitanId(titanId: com.trafigura.edm.shared.types.TitanId): com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterRow =
      locator.proxy.getTradeBlotterRowByTitanId(titanId)
  
    def getFilteredTradeBlotterRowById(filterByWho: Int, filterByDate: Int, oid: Int): com.trafigura.tradecapture.internal.refinedmetaltradeservice.FilteredTradeBlotterRowResults =
      locator.proxy.getFilteredTradeBlotterRowById(filterByWho, filterByDate, oid)
  
    def getFilteredTradeBlotterRowByTitanId(filterByWho: Int, filterByDate: Int, titanId: com.trafigura.edm.shared.types.TitanId): com.trafigura.tradecapture.internal.refinedmetaltradeservice.FilteredTradeBlotterRowResults =
      locator.proxy.getFilteredTradeBlotterRowByTitanId(filterByWho, filterByDate, titanId)
  
    def getNotCancelledTradeBlotterRows(): List[com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterRow] =
      locator.proxy.getNotCancelledTradeBlotterRows()
  
    def getNotCancelledTradeBlotterRowsFromId(identifier: Int, count: Int): List[com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterRow] =
      locator.proxy.getNotCancelledTradeBlotterRowsFromId(identifier, count)
  
    def getNotCancelledTradeBlotterRowsFromTitanId(titanId: com.trafigura.edm.shared.types.TitanId, count: Int): List[com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterRow] =
      locator.proxy.getNotCancelledTradeBlotterRowsFromTitanId(titanId, count)
  
    def getFilteredNotCancelledTradeBlotterRowsFromId(filterByWho: Int, filterByDate: Int, identifier: Int, count: Int): List[com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterRow] =
      locator.proxy.getFilteredNotCancelledTradeBlotterRowsFromId(filterByWho, filterByDate, identifier, count)
  
    def getFilteredNotCancelledTradeBlotterRowsFromTitanId(filterByWho: Int, filterByDate: Int, titanId: com.trafigura.edm.shared.types.TitanId, count: Int): List[com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterRow] =
      locator.proxy.getFilteredNotCancelledTradeBlotterRowsFromTitanId(filterByWho, filterByDate, titanId, count)
  
    def getTradeBlotterQuotaRowsForTrade(oid: Int, sortBy: String): List[com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterQuotaRow] =
      locator.proxy.getTradeBlotterQuotaRowsForTrade(oid, sortBy)
  
    def getTradeBlotterQuotaRowsForTradeByTitanId(titanId: com.trafigura.edm.shared.types.TitanId, sortBy: String): List[com.trafigura.tradecapture.internal.refinedmetal.TradeBlotterQuotaRow] =
      locator.proxy.getTradeBlotterQuotaRowsForTradeByTitanId(titanId, sortBy)
  
    def checkTradeWithIdExists(oid: Int): Boolean =
      locator.proxy.checkTradeWithIdExists(oid)
  
    def checkTradeWithTitanIdExists(titanId: com.trafigura.edm.shared.types.TitanId): Boolean =
      locator.proxy.checkTradeWithTitanIdExists(titanId)
  
    def checkTradeWithNeptuneIdExists(neptuneId: String): Boolean =
      locator.proxy.checkTradeWithNeptuneIdExists(neptuneId)
  
}