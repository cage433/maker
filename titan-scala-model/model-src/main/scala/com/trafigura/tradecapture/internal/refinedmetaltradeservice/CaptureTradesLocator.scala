/**
 * WARNING: This file was automatically generated by the Trading Hub tooling version 2.15.
 * Any manual changes may be overwritten and lost!
 */


// Generated from model_service_locator.rb

package com.trafigura.tradecapture.internal.refinedmetaltradeservice

import com.trafigura.tradinghub.support._
import com.trafigura.tradinghub.discovery._
import org.jboss.resteasy.client._

import com.trafigura.tradecapture.internal.refinedmetal._
import com.trafigura.edm.shared.types._


/**
 * Locator for finding CaptureTrades instances.
 */
trait CaptureTradesLocator {
  /**
   * Provides a proxy for the given operation to run.
   */
  def proxy:CaptureTrades
}

class LocatableCaptureTrades(val locator:CaptureTradesLocator) extends CaptureTrades {
  
    def update(trade: com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTrade): com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTradeSubmissionResult =
      locator.proxy.update(trade)
  
    def create(trade: com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTrade): com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTradeSubmissionResult =
      locator.proxy.create(trade)
  
    def cancel(trade: com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTrade): com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTradeSubmissionResult =
      locator.proxy.cancel(trade)
  
    def complete(trade: com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTrade): com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTradeSubmissionResult =
      locator.proxy.complete(trade)
  
    def calculatePremia(trade: com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTrade): com.trafigura.tradecapture.internal.refinedmetal.RefinedMetalTrade =
      locator.proxy.calculatePremia(trade)
  
    def registerDocumentCreationInTrade(tradeId: com.trafigura.edm.shared.types.TitanId, lang: String, docType: String, version: org.joda.time.DateTime): Boolean =
      locator.proxy.registerDocumentCreationInTrade(tradeId, lang, docType, version)
  
}