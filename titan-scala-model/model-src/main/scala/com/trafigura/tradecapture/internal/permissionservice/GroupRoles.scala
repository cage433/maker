/**
 * WARNING: This file was automatically generated by the Trading Hub tooling version 2.15.
 * Any manual changes may be overwritten and lost!
 */


// Generated from model_object_scala.erb

package com.trafigura.tradecapture.internal.permissionservice





import com.trafigura.tradinghub.support._
import scala.collection.JavaConversions._




 class GroupRoles extends com.trafigura.tradinghub.support.ModelObject  {
  


  
    

var oid:Int = 0
    
    
    

var groupId:Int = 0
    
    
    

var roleId:Int = 0
    
    





  override def equals(o: Any) = o match {
    case r: AnyRef =>
        if (o.isInstanceOf[com.trafigura.tradecapture.internal.permissionservice.GroupRoles]) {
            val that = r.asInstanceOf[com.trafigura.tradecapture.internal.permissionservice.GroupRoles]
            that.canEqual(this) && this.groupId == that.groupId && this.oid == that.oid && this.roleId == that.roleId &&  true
        }
        else false
    case _ => false
  }

  override def canEqual(that : Any) = that.isInstanceOf[com.trafigura.tradecapture.internal.permissionservice.GroupRoles]

  override def hashCode = {
    (41 * (41 * (41 *  1
    ) +
         groupId.hashCode
        
    ) +
         oid.hashCode
        
    ) +
         roleId.hashCode
        
    
  }

  override def toString = {
    "{com.trafigura.tradecapture.internal.permissionservice.GroupRoles: " + "" + "groupId = " + groupId + ", " + "oid = " + oid + ", " + "roleId = " + roleId +  "}"
  }


  
         def toJson() : org.codehaus.jettison.json.JSONObject = {
      toJson(new SerialisationHelper)
    }

     def toJson(differentiator: SerialisationHelper) : org.codehaus.jettison.json.JSONObject = {
        var result = new org.codehaus.jettison.json.JSONObject();

        result.put("_node", differentiator.idFor(this))

        result.put("Type", "TradeCapture.Internal.PermissionService.GroupRoles@1@1.0")
        
          
          
          
          
            result.putOpt("Oid", this.oid);
          
        
          
          
          
          
            result.putOpt("GroupId", this.groupId);
          
        
          
          
          
          
            result.putOpt("RoleId", this.roleId);
          
        
        return result;
    }

     def loadJson(jobj : org.codehaus.jettison.json.JSONObject, cache: DeserialisationHelper) = {
        
        
          
              oid = JSONConversions.optional[Int](jobj.opt("Oid"), 0)
          
              groupId = jobj.optInt("GroupId")
          
              roleId = jobj.optInt("RoleId")
          
        
    }

  
}

object GroupRoles {
  def version = ModelVersion("1")
  def wireFormatVersion = ModelVersion("1.0")

  
        val jsonTypeName = "TradeCapture.Internal.PermissionService.GroupRoles"

    def fromJson(jobj : org.codehaus.jettison.json.JSONObject, cache: DeserialisationHelper = new DeserialisationHelper) : com.trafigura.tradecapture.internal.permissionservice.GroupRoles = {
      val v = TypeHolder(jobj.optString("Type"))

      v.assertModelVersion(version, "com.trafigura.tradecapture.internal.permissionservice.GroupRoles")
      v.assertWireFormatVersion(wireFormatVersion, "com.trafigura.tradecapture.internal.permissionservice.GroupRoles")

      
        
            val result = new com.trafigura.tradecapture.internal.permissionservice.GroupRoles()
            result.loadJson(jobj, cache)
            result
        
      
    }

  

  

  
    def apply(oid: Int = 0, groupId: Int = 0, roleId: Int = 0) = {
      val res = new com.trafigura.tradecapture.internal.permissionservice.GroupRoles
      
        res.oid = oid
      
        res.groupId = groupId
      
        res.roleId = roleId
      
      res
    }
  
}
