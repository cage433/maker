/**
 * WARNING: This file was automatically generated by the Trading Hub tooling version 2.15.
 * Any manual changes may be overwritten and lost!
 */


// Generated from model_service_locator.rb

package com.trafigura.tradecapture.internal.permissionservice

import com.trafigura.tradinghub.support._
import com.trafigura.tradinghub.discovery._
import org.jboss.resteasy.client._

import com.trafigura.tradecapture.internal.permissionservice._


/**
 * Locator for finding PermissionService instances.
 */
trait PermissionServiceLocator {
  /**
   * Provides a proxy for the given operation to run.
   */
  def proxy:PermissionService
}

class LocatablePermissionService(val locator:PermissionServiceLocator) extends PermissionService {
  
    def getAll(): List[com.trafigura.tradecapture.internal.permissionservice.Permission] =
      locator.proxy.getAll()
  
    def getAllUser(sid: String): List[com.trafigura.tradecapture.internal.permissionservice.Permission] =
      locator.proxy.getAllUser(sid)
  
    def getEffective(sid: String, requiredPermissions: List[com.trafigura.tradecapture.internal.permissionservice.Permission]): List[com.trafigura.tradecapture.internal.permissionservice.Permission] =
      locator.proxy.getEffective(sid, requiredPermissions)
  
    def checkPermission(sid: String, requiredPermissions: List[com.trafigura.tradecapture.internal.permissionservice.Permission]): Boolean =
      locator.proxy.checkPermission(sid, requiredPermissions)
  
    def checkPermissionForRequester(requiredPermissions: List[com.trafigura.tradecapture.internal.permissionservice.Permission]): Boolean =
      locator.proxy.checkPermissionForRequester(requiredPermissions)
  
    def create(permission: com.trafigura.tradecapture.internal.permissionservice.Permission): com.trafigura.tradecapture.internal.permissionservice.Permission =
      locator.proxy.create(permission)
  
    def delete(permission: com.trafigura.tradecapture.internal.permissionservice.Permission): Boolean =
      locator.proxy.delete(permission)
  
}