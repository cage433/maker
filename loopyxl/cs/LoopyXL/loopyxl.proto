package loopyxl;

option java_package = "starling.loopyxl";
option java_outer_classname = "LoopyXL";
option optimize_for=SPEED;

/////////////////////////////////////////////////////////////////////

enum MessageType { AUTHENTICATE = 0; LOOKUP = 1; INVOCATION = 2; }

message Request {
  required int32 id = 1;
  required MessageType type = 2;

  optional AuthenticateRequest authenticate = 3;
  optional LookupRequest lookup = 4;
  optional InvocationRequest invocation = 5;
}

message Response {
  enum Status { SUCCESS = 0; FAILURE = 1; TIMEOUT = 2;}
  
  required int32 id = 1;
  required int32 requestId = 2;
  required MessageType type = 3;
  required Status status = 4 [default = SUCCESS];
  
  optional AuthenticateResponse authenticate = 5;
  optional LookupResponse lookup = 6;
  optional InvocationResponse invocation = 7;
}

/////////////////////////////////////////////////////////////////////

message AuthenticateRequest {
  required bytes ticket = 1;
}

message AuthenticateResponse {
}

/////////////////////////////////////////////////////////////////////

message LookupRequest {
}

message LookupResponse {
  repeated MethodDefinition definitions = 1;
}

message MethodDefinition {
  required int32 id = 1;
  required string name = 2;
  repeated string parameterTypes = 3;
  required string returnType = 4;
}

/////////////////////////////////////////////////////////////////////

message InvocationRequest {
  required int32 methodId = 1;
  repeated InvocationValue parameters = 2;
}

message InvocationResponse {
  required InvocationValue result = 1;
}

message InvocationValue {
  enum Type {
    DOUBLE_VALUE = 0; DOUBLE_ARRAY = 1; DOUBLE_MATRIX = 2;
    STRING_VALUE = 3; STRING_ARRAY = 4; STRING_MATRIX = 5;
    OBJECT_VALUE = 6; OBJECT_ARRAY = 7; OBJECT_MATRIX = 8;
  }
  
  required Type type = 1;
  
  optional double doubleValue = 2;
  repeated double doubleArray = 3;
  repeated DoubleArray doubleMatrix = 4;
  
  optional string stringValue = 5;
  repeated string stringArray = 6;
  repeated StringArray stringMatrix = 7;

  optional TypedObject objectValue = 8;
  repeated TypedObject objectArray = 9;
  repeated TypedArray objectMatrix = 10;
}

message TypedObject {
  enum Type { DOUBLE = 0; STRING = 1; }

  required Type type = 1;

  optional double doubleValue = 2;
  optional string stringValue = 3;
}


message DoubleArray {
  repeated double values = 1;
}

message StringArray {
  repeated string values = 1;
}

message TypedArray {
  repeated TypedObject values = 1;
}

/////////////////////////////////////////////////////////////////////