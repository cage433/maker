// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: src/loopyxl.proto

package starling.loopyxl;

public final class LoopyXL {
  private LoopyXL() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public enum MessageType
      implements com.google.protobuf.ProtocolMessageEnum {
    AUTHENTICATE(0, 0),
    LOOKUP(1, 1),
    INVOCATION(2, 2),
    ;
    
    
    public final int getNumber() { return value; }
    
    public static MessageType valueOf(int value) {
      switch (value) {
        case 0: return AUTHENTICATE;
        case 1: return LOOKUP;
        case 2: return INVOCATION;
        default: return null;
      }
    }
    
    public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<MessageType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
            public MessageType findValueByNumber(int number) {
              return MessageType.valueOf(number)
    ;        }
          };
    
    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.getDescriptor().getEnumTypes().get(0);
    }
    
    private static final MessageType[] VALUES = {
      AUTHENTICATE, LOOKUP, INVOCATION, 
    };
    public static MessageType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }
    private final int index;
    private final int value;
    private MessageType(int index, int value) {
      this.index = index;
      this.value = value;
    }
    
    static {
      starling.loopyxl.LoopyXL.getDescriptor();
    }
    
    // @@protoc_insertion_point(enum_scope:loopyxl.MessageType)
  }
  
  public static final class Request extends
      com.google.protobuf.GeneratedMessage {
    // Use Request.newBuilder() to construct.
    private Request() {
      initFields();
    }
    private Request(boolean noInit) {}
    
    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }
    
    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_Request_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_Request_fieldAccessorTable;
    }
    
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required .loopyxl.MessageType type = 2;
    public static final int TYPE_FIELD_NUMBER = 2;
    private boolean hasType;
    private starling.loopyxl.LoopyXL.MessageType type_;
    public boolean hasType() { return hasType; }
    public starling.loopyxl.LoopyXL.MessageType getType() { return type_; }
    
    // optional .loopyxl.AuthenticateRequest authenticate = 3;
    public static final int AUTHENTICATE_FIELD_NUMBER = 3;
    private boolean hasAuthenticate;
    private starling.loopyxl.LoopyXL.AuthenticateRequest authenticate_;
    public boolean hasAuthenticate() { return hasAuthenticate; }
    public starling.loopyxl.LoopyXL.AuthenticateRequest getAuthenticate() { return authenticate_; }
    
    // optional .loopyxl.LookupRequest lookup = 4;
    public static final int LOOKUP_FIELD_NUMBER = 4;
    private boolean hasLookup;
    private starling.loopyxl.LoopyXL.LookupRequest lookup_;
    public boolean hasLookup() { return hasLookup; }
    public starling.loopyxl.LoopyXL.LookupRequest getLookup() { return lookup_; }
    
    // optional .loopyxl.InvocationRequest invocation = 5;
    public static final int INVOCATION_FIELD_NUMBER = 5;
    private boolean hasInvocation;
    private starling.loopyxl.LoopyXL.InvocationRequest invocation_;
    public boolean hasInvocation() { return hasInvocation; }
    public starling.loopyxl.LoopyXL.InvocationRequest getInvocation() { return invocation_; }
    
    private void initFields() {
      type_ = starling.loopyxl.LoopyXL.MessageType.AUTHENTICATE;
      authenticate_ = starling.loopyxl.LoopyXL.AuthenticateRequest.getDefaultInstance();
      lookup_ = starling.loopyxl.LoopyXL.LookupRequest.getDefaultInstance();
      invocation_ = starling.loopyxl.LoopyXL.InvocationRequest.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasType) return false;
      if (hasAuthenticate()) {
        if (!getAuthenticate().isInitialized()) return false;
      }
      if (hasInvocation()) {
        if (!getInvocation().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasType()) {
        output.writeEnum(2, getType().getNumber());
      }
      if (hasAuthenticate()) {
        output.writeMessage(3, getAuthenticate());
      }
      if (hasLookup()) {
        output.writeMessage(4, getLookup());
      }
      if (hasInvocation()) {
        output.writeMessage(5, getInvocation());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getType().getNumber());
      }
      if (hasAuthenticate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAuthenticate());
      }
      if (hasLookup()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLookup());
      }
      if (hasInvocation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getInvocation());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.Request result;
      
      // Construct using starling.loopyxl.LoopyXL.Request.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.Request();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.Request internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.Request();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.Request.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.Request getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.Request.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.Request build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.Request buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.Request buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        starling.loopyxl.LoopyXL.Request returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.Request) {
          return mergeFrom((starling.loopyxl.LoopyXL.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.Request other) {
        if (other == starling.loopyxl.LoopyXL.Request.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasAuthenticate()) {
          mergeAuthenticate(other.getAuthenticate());
        }
        if (other.hasLookup()) {
          mergeLookup(other.getLookup());
        }
        if (other.hasInvocation()) {
          mergeInvocation(other.getInvocation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              starling.loopyxl.LoopyXL.MessageType value = starling.loopyxl.LoopyXL.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 26: {
              starling.loopyxl.LoopyXL.AuthenticateRequest.Builder subBuilder = starling.loopyxl.LoopyXL.AuthenticateRequest.newBuilder();
              if (hasAuthenticate()) {
                subBuilder.mergeFrom(getAuthenticate());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAuthenticate(subBuilder.buildPartial());
              break;
            }
            case 34: {
              starling.loopyxl.LoopyXL.LookupRequest.Builder subBuilder = starling.loopyxl.LoopyXL.LookupRequest.newBuilder();
              if (hasLookup()) {
                subBuilder.mergeFrom(getLookup());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLookup(subBuilder.buildPartial());
              break;
            }
            case 42: {
              starling.loopyxl.LoopyXL.InvocationRequest.Builder subBuilder = starling.loopyxl.LoopyXL.InvocationRequest.newBuilder();
              if (hasInvocation()) {
                subBuilder.mergeFrom(getInvocation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInvocation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required .loopyxl.MessageType type = 2;
      public boolean hasType() {
        return result.hasType();
      }
      public starling.loopyxl.LoopyXL.MessageType getType() {
        return result.getType();
      }
      public Builder setType(starling.loopyxl.LoopyXL.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = starling.loopyxl.LoopyXL.MessageType.AUTHENTICATE;
        return this;
      }
      
      // optional .loopyxl.AuthenticateRequest authenticate = 3;
      public boolean hasAuthenticate() {
        return result.hasAuthenticate();
      }
      public starling.loopyxl.LoopyXL.AuthenticateRequest getAuthenticate() {
        return result.getAuthenticate();
      }
      public Builder setAuthenticate(starling.loopyxl.LoopyXL.AuthenticateRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAuthenticate = true;
        result.authenticate_ = value;
        return this;
      }
      public Builder setAuthenticate(starling.loopyxl.LoopyXL.AuthenticateRequest.Builder builderForValue) {
        result.hasAuthenticate = true;
        result.authenticate_ = builderForValue.build();
        return this;
      }
      public Builder mergeAuthenticate(starling.loopyxl.LoopyXL.AuthenticateRequest value) {
        if (result.hasAuthenticate() &&
            result.authenticate_ != starling.loopyxl.LoopyXL.AuthenticateRequest.getDefaultInstance()) {
          result.authenticate_ =
            starling.loopyxl.LoopyXL.AuthenticateRequest.newBuilder(result.authenticate_).mergeFrom(value).buildPartial();
        } else {
          result.authenticate_ = value;
        }
        result.hasAuthenticate = true;
        return this;
      }
      public Builder clearAuthenticate() {
        result.hasAuthenticate = false;
        result.authenticate_ = starling.loopyxl.LoopyXL.AuthenticateRequest.getDefaultInstance();
        return this;
      }
      
      // optional .loopyxl.LookupRequest lookup = 4;
      public boolean hasLookup() {
        return result.hasLookup();
      }
      public starling.loopyxl.LoopyXL.LookupRequest getLookup() {
        return result.getLookup();
      }
      public Builder setLookup(starling.loopyxl.LoopyXL.LookupRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLookup = true;
        result.lookup_ = value;
        return this;
      }
      public Builder setLookup(starling.loopyxl.LoopyXL.LookupRequest.Builder builderForValue) {
        result.hasLookup = true;
        result.lookup_ = builderForValue.build();
        return this;
      }
      public Builder mergeLookup(starling.loopyxl.LoopyXL.LookupRequest value) {
        if (result.hasLookup() &&
            result.lookup_ != starling.loopyxl.LoopyXL.LookupRequest.getDefaultInstance()) {
          result.lookup_ =
            starling.loopyxl.LoopyXL.LookupRequest.newBuilder(result.lookup_).mergeFrom(value).buildPartial();
        } else {
          result.lookup_ = value;
        }
        result.hasLookup = true;
        return this;
      }
      public Builder clearLookup() {
        result.hasLookup = false;
        result.lookup_ = starling.loopyxl.LoopyXL.LookupRequest.getDefaultInstance();
        return this;
      }
      
      // optional .loopyxl.InvocationRequest invocation = 5;
      public boolean hasInvocation() {
        return result.hasInvocation();
      }
      public starling.loopyxl.LoopyXL.InvocationRequest getInvocation() {
        return result.getInvocation();
      }
      public Builder setInvocation(starling.loopyxl.LoopyXL.InvocationRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasInvocation = true;
        result.invocation_ = value;
        return this;
      }
      public Builder setInvocation(starling.loopyxl.LoopyXL.InvocationRequest.Builder builderForValue) {
        result.hasInvocation = true;
        result.invocation_ = builderForValue.build();
        return this;
      }
      public Builder mergeInvocation(starling.loopyxl.LoopyXL.InvocationRequest value) {
        if (result.hasInvocation() &&
            result.invocation_ != starling.loopyxl.LoopyXL.InvocationRequest.getDefaultInstance()) {
          result.invocation_ =
            starling.loopyxl.LoopyXL.InvocationRequest.newBuilder(result.invocation_).mergeFrom(value).buildPartial();
        } else {
          result.invocation_ = value;
        }
        result.hasInvocation = true;
        return this;
      }
      public Builder clearInvocation() {
        result.hasInvocation = false;
        result.invocation_ = starling.loopyxl.LoopyXL.InvocationRequest.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.Request)
    }
    
    static {
      defaultInstance = new Request(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.Request)
  }
  
  public static final class Response extends
      com.google.protobuf.GeneratedMessage {
    // Use Response.newBuilder() to construct.
    private Response() {
      initFields();
    }
    private Response(boolean noInit) {}
    
    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }
    
    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_Response_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_Response_fieldAccessorTable;
    }
    
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      SUCCESS(0, 0),
      FAILURE(1, 1),
      TIMEOUT(2, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Status valueOf(int value) {
        switch (value) {
          case 0: return SUCCESS;
          case 1: return FAILURE;
          case 2: return TIMEOUT;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return starling.loopyxl.LoopyXL.Response.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Status[] VALUES = {
        SUCCESS, FAILURE, TIMEOUT, 
      };
      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Status(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        starling.loopyxl.LoopyXL.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:loopyxl.Response.Status)
    }
    
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required int32 requestId = 2;
    public static final int REQUESTID_FIELD_NUMBER = 2;
    private boolean hasRequestId;
    private int requestId_ = 0;
    public boolean hasRequestId() { return hasRequestId; }
    public int getRequestId() { return requestId_; }
    
    // required .loopyxl.MessageType type = 3;
    public static final int TYPE_FIELD_NUMBER = 3;
    private boolean hasType;
    private starling.loopyxl.LoopyXL.MessageType type_;
    public boolean hasType() { return hasType; }
    public starling.loopyxl.LoopyXL.MessageType getType() { return type_; }
    
    // required .loopyxl.Response.Status status = 4 [default = SUCCESS];
    public static final int STATUS_FIELD_NUMBER = 4;
    private boolean hasStatus;
    private starling.loopyxl.LoopyXL.Response.Status status_;
    public boolean hasStatus() { return hasStatus; }
    public starling.loopyxl.LoopyXL.Response.Status getStatus() { return status_; }
    
    // optional .loopyxl.AuthenticateResponse authenticate = 5;
    public static final int AUTHENTICATE_FIELD_NUMBER = 5;
    private boolean hasAuthenticate;
    private starling.loopyxl.LoopyXL.AuthenticateResponse authenticate_;
    public boolean hasAuthenticate() { return hasAuthenticate; }
    public starling.loopyxl.LoopyXL.AuthenticateResponse getAuthenticate() { return authenticate_; }
    
    // optional .loopyxl.LookupResponse lookup = 6;
    public static final int LOOKUP_FIELD_NUMBER = 6;
    private boolean hasLookup;
    private starling.loopyxl.LoopyXL.LookupResponse lookup_;
    public boolean hasLookup() { return hasLookup; }
    public starling.loopyxl.LoopyXL.LookupResponse getLookup() { return lookup_; }
    
    // optional .loopyxl.InvocationResponse invocation = 7;
    public static final int INVOCATION_FIELD_NUMBER = 7;
    private boolean hasInvocation;
    private starling.loopyxl.LoopyXL.InvocationResponse invocation_;
    public boolean hasInvocation() { return hasInvocation; }
    public starling.loopyxl.LoopyXL.InvocationResponse getInvocation() { return invocation_; }
    
    private void initFields() {
      type_ = starling.loopyxl.LoopyXL.MessageType.AUTHENTICATE;
      status_ = starling.loopyxl.LoopyXL.Response.Status.SUCCESS;
      authenticate_ = starling.loopyxl.LoopyXL.AuthenticateResponse.getDefaultInstance();
      lookup_ = starling.loopyxl.LoopyXL.LookupResponse.getDefaultInstance();
      invocation_ = starling.loopyxl.LoopyXL.InvocationResponse.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasRequestId) return false;
      if (!hasType) return false;
      if (!hasStatus) return false;
      if (hasLookup()) {
        if (!getLookup().isInitialized()) return false;
      }
      if (hasInvocation()) {
        if (!getInvocation().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasRequestId()) {
        output.writeInt32(2, getRequestId());
      }
      if (hasType()) {
        output.writeEnum(3, getType().getNumber());
      }
      if (hasStatus()) {
        output.writeEnum(4, getStatus().getNumber());
      }
      if (hasAuthenticate()) {
        output.writeMessage(5, getAuthenticate());
      }
      if (hasLookup()) {
        output.writeMessage(6, getLookup());
      }
      if (hasInvocation()) {
        output.writeMessage(7, getInvocation());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasRequestId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getRequestId());
      }
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getType().getNumber());
      }
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, getStatus().getNumber());
      }
      if (hasAuthenticate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAuthenticate());
      }
      if (hasLookup()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getLookup());
      }
      if (hasInvocation()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getInvocation());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.Response result;
      
      // Construct using starling.loopyxl.LoopyXL.Response.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.Response();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.Response internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.Response();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.Response.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.Response getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.Response.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.Response build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.Response buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.Response buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        starling.loopyxl.LoopyXL.Response returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.Response) {
          return mergeFrom((starling.loopyxl.LoopyXL.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.Response other) {
        if (other == starling.loopyxl.LoopyXL.Response.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasRequestId()) {
          setRequestId(other.getRequestId());
        }
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasAuthenticate()) {
          mergeAuthenticate(other.getAuthenticate());
        }
        if (other.hasLookup()) {
          mergeLookup(other.getLookup());
        }
        if (other.hasInvocation()) {
          mergeInvocation(other.getInvocation());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 16: {
              setRequestId(input.readInt32());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              starling.loopyxl.LoopyXL.MessageType value = starling.loopyxl.LoopyXL.MessageType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              starling.loopyxl.LoopyXL.Response.Status value = starling.loopyxl.LoopyXL.Response.Status.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                setStatus(value);
              }
              break;
            }
            case 42: {
              starling.loopyxl.LoopyXL.AuthenticateResponse.Builder subBuilder = starling.loopyxl.LoopyXL.AuthenticateResponse.newBuilder();
              if (hasAuthenticate()) {
                subBuilder.mergeFrom(getAuthenticate());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAuthenticate(subBuilder.buildPartial());
              break;
            }
            case 50: {
              starling.loopyxl.LoopyXL.LookupResponse.Builder subBuilder = starling.loopyxl.LoopyXL.LookupResponse.newBuilder();
              if (hasLookup()) {
                subBuilder.mergeFrom(getLookup());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setLookup(subBuilder.buildPartial());
              break;
            }
            case 58: {
              starling.loopyxl.LoopyXL.InvocationResponse.Builder subBuilder = starling.loopyxl.LoopyXL.InvocationResponse.newBuilder();
              if (hasInvocation()) {
                subBuilder.mergeFrom(getInvocation());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setInvocation(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required int32 requestId = 2;
      public boolean hasRequestId() {
        return result.hasRequestId();
      }
      public int getRequestId() {
        return result.getRequestId();
      }
      public Builder setRequestId(int value) {
        result.hasRequestId = true;
        result.requestId_ = value;
        return this;
      }
      public Builder clearRequestId() {
        result.hasRequestId = false;
        result.requestId_ = 0;
        return this;
      }
      
      // required .loopyxl.MessageType type = 3;
      public boolean hasType() {
        return result.hasType();
      }
      public starling.loopyxl.LoopyXL.MessageType getType() {
        return result.getType();
      }
      public Builder setType(starling.loopyxl.LoopyXL.MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = starling.loopyxl.LoopyXL.MessageType.AUTHENTICATE;
        return this;
      }
      
      // required .loopyxl.Response.Status status = 4 [default = SUCCESS];
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public starling.loopyxl.LoopyXL.Response.Status getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(starling.loopyxl.LoopyXL.Response.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = starling.loopyxl.LoopyXL.Response.Status.SUCCESS;
        return this;
      }
      
      // optional .loopyxl.AuthenticateResponse authenticate = 5;
      public boolean hasAuthenticate() {
        return result.hasAuthenticate();
      }
      public starling.loopyxl.LoopyXL.AuthenticateResponse getAuthenticate() {
        return result.getAuthenticate();
      }
      public Builder setAuthenticate(starling.loopyxl.LoopyXL.AuthenticateResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAuthenticate = true;
        result.authenticate_ = value;
        return this;
      }
      public Builder setAuthenticate(starling.loopyxl.LoopyXL.AuthenticateResponse.Builder builderForValue) {
        result.hasAuthenticate = true;
        result.authenticate_ = builderForValue.build();
        return this;
      }
      public Builder mergeAuthenticate(starling.loopyxl.LoopyXL.AuthenticateResponse value) {
        if (result.hasAuthenticate() &&
            result.authenticate_ != starling.loopyxl.LoopyXL.AuthenticateResponse.getDefaultInstance()) {
          result.authenticate_ =
            starling.loopyxl.LoopyXL.AuthenticateResponse.newBuilder(result.authenticate_).mergeFrom(value).buildPartial();
        } else {
          result.authenticate_ = value;
        }
        result.hasAuthenticate = true;
        return this;
      }
      public Builder clearAuthenticate() {
        result.hasAuthenticate = false;
        result.authenticate_ = starling.loopyxl.LoopyXL.AuthenticateResponse.getDefaultInstance();
        return this;
      }
      
      // optional .loopyxl.LookupResponse lookup = 6;
      public boolean hasLookup() {
        return result.hasLookup();
      }
      public starling.loopyxl.LoopyXL.LookupResponse getLookup() {
        return result.getLookup();
      }
      public Builder setLookup(starling.loopyxl.LoopyXL.LookupResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasLookup = true;
        result.lookup_ = value;
        return this;
      }
      public Builder setLookup(starling.loopyxl.LoopyXL.LookupResponse.Builder builderForValue) {
        result.hasLookup = true;
        result.lookup_ = builderForValue.build();
        return this;
      }
      public Builder mergeLookup(starling.loopyxl.LoopyXL.LookupResponse value) {
        if (result.hasLookup() &&
            result.lookup_ != starling.loopyxl.LoopyXL.LookupResponse.getDefaultInstance()) {
          result.lookup_ =
            starling.loopyxl.LoopyXL.LookupResponse.newBuilder(result.lookup_).mergeFrom(value).buildPartial();
        } else {
          result.lookup_ = value;
        }
        result.hasLookup = true;
        return this;
      }
      public Builder clearLookup() {
        result.hasLookup = false;
        result.lookup_ = starling.loopyxl.LoopyXL.LookupResponse.getDefaultInstance();
        return this;
      }
      
      // optional .loopyxl.InvocationResponse invocation = 7;
      public boolean hasInvocation() {
        return result.hasInvocation();
      }
      public starling.loopyxl.LoopyXL.InvocationResponse getInvocation() {
        return result.getInvocation();
      }
      public Builder setInvocation(starling.loopyxl.LoopyXL.InvocationResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasInvocation = true;
        result.invocation_ = value;
        return this;
      }
      public Builder setInvocation(starling.loopyxl.LoopyXL.InvocationResponse.Builder builderForValue) {
        result.hasInvocation = true;
        result.invocation_ = builderForValue.build();
        return this;
      }
      public Builder mergeInvocation(starling.loopyxl.LoopyXL.InvocationResponse value) {
        if (result.hasInvocation() &&
            result.invocation_ != starling.loopyxl.LoopyXL.InvocationResponse.getDefaultInstance()) {
          result.invocation_ =
            starling.loopyxl.LoopyXL.InvocationResponse.newBuilder(result.invocation_).mergeFrom(value).buildPartial();
        } else {
          result.invocation_ = value;
        }
        result.hasInvocation = true;
        return this;
      }
      public Builder clearInvocation() {
        result.hasInvocation = false;
        result.invocation_ = starling.loopyxl.LoopyXL.InvocationResponse.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.Response)
    }
    
    static {
      defaultInstance = new Response(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.Response)
  }
  
  public static final class AuthenticateRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use AuthenticateRequest.newBuilder() to construct.
    private AuthenticateRequest() {
      initFields();
    }
    private AuthenticateRequest(boolean noInit) {}
    
    private static final AuthenticateRequest defaultInstance;
    public static AuthenticateRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AuthenticateRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_AuthenticateRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_AuthenticateRequest_fieldAccessorTable;
    }
    
    // required bytes ticket = 1;
    public static final int TICKET_FIELD_NUMBER = 1;
    private boolean hasTicket;
    private com.google.protobuf.ByteString ticket_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasTicket() { return hasTicket; }
    public com.google.protobuf.ByteString getTicket() { return ticket_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTicket) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTicket()) {
        output.writeBytes(1, getTicket());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTicket()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTicket());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.AuthenticateRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.AuthenticateRequest result;
      
      // Construct using starling.loopyxl.LoopyXL.AuthenticateRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.AuthenticateRequest();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.AuthenticateRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.AuthenticateRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.AuthenticateRequest.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.AuthenticateRequest getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.AuthenticateRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.AuthenticateRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.AuthenticateRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.AuthenticateRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        starling.loopyxl.LoopyXL.AuthenticateRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.AuthenticateRequest) {
          return mergeFrom((starling.loopyxl.LoopyXL.AuthenticateRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.AuthenticateRequest other) {
        if (other == starling.loopyxl.LoopyXL.AuthenticateRequest.getDefaultInstance()) return this;
        if (other.hasTicket()) {
          setTicket(other.getTicket());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setTicket(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required bytes ticket = 1;
      public boolean hasTicket() {
        return result.hasTicket();
      }
      public com.google.protobuf.ByteString getTicket() {
        return result.getTicket();
      }
      public Builder setTicket(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTicket = true;
        result.ticket_ = value;
        return this;
      }
      public Builder clearTicket() {
        result.hasTicket = false;
        result.ticket_ = getDefaultInstance().getTicket();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.AuthenticateRequest)
    }
    
    static {
      defaultInstance = new AuthenticateRequest(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.AuthenticateRequest)
  }
  
  public static final class AuthenticateResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use AuthenticateResponse.newBuilder() to construct.
    private AuthenticateResponse() {
      initFields();
    }
    private AuthenticateResponse(boolean noInit) {}
    
    private static final AuthenticateResponse defaultInstance;
    public static AuthenticateResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AuthenticateResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_AuthenticateResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_AuthenticateResponse_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.AuthenticateResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.AuthenticateResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.AuthenticateResponse result;
      
      // Construct using starling.loopyxl.LoopyXL.AuthenticateResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.AuthenticateResponse();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.AuthenticateResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.AuthenticateResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.AuthenticateResponse.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.AuthenticateResponse getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.AuthenticateResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.AuthenticateResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.AuthenticateResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.AuthenticateResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        starling.loopyxl.LoopyXL.AuthenticateResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.AuthenticateResponse) {
          return mergeFrom((starling.loopyxl.LoopyXL.AuthenticateResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.AuthenticateResponse other) {
        if (other == starling.loopyxl.LoopyXL.AuthenticateResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:loopyxl.AuthenticateResponse)
    }
    
    static {
      defaultInstance = new AuthenticateResponse(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.AuthenticateResponse)
  }
  
  public static final class LookupRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use LookupRequest.newBuilder() to construct.
    private LookupRequest() {
      initFields();
    }
    private LookupRequest(boolean noInit) {}
    
    private static final LookupRequest defaultInstance;
    public static LookupRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public LookupRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_LookupRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_LookupRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.LookupRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.LookupRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.LookupRequest result;
      
      // Construct using starling.loopyxl.LoopyXL.LookupRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.LookupRequest();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.LookupRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.LookupRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.LookupRequest.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.LookupRequest getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.LookupRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.LookupRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.LookupRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.LookupRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        starling.loopyxl.LoopyXL.LookupRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.LookupRequest) {
          return mergeFrom((starling.loopyxl.LoopyXL.LookupRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.LookupRequest other) {
        if (other == starling.loopyxl.LoopyXL.LookupRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:loopyxl.LookupRequest)
    }
    
    static {
      defaultInstance = new LookupRequest(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.LookupRequest)
  }
  
  public static final class LookupResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use LookupResponse.newBuilder() to construct.
    private LookupResponse() {
      initFields();
    }
    private LookupResponse(boolean noInit) {}
    
    private static final LookupResponse defaultInstance;
    public static LookupResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public LookupResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_LookupResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_LookupResponse_fieldAccessorTable;
    }
    
    // repeated .loopyxl.MethodDefinition definitions = 1;
    public static final int DEFINITIONS_FIELD_NUMBER = 1;
    private java.util.List<starling.loopyxl.LoopyXL.MethodDefinition> definitions_ =
      java.util.Collections.emptyList();
    public java.util.List<starling.loopyxl.LoopyXL.MethodDefinition> getDefinitionsList() {
      return definitions_;
    }
    public int getDefinitionsCount() { return definitions_.size(); }
    public starling.loopyxl.LoopyXL.MethodDefinition getDefinitions(int index) {
      return definitions_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (starling.loopyxl.LoopyXL.MethodDefinition element : getDefinitionsList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (starling.loopyxl.LoopyXL.MethodDefinition element : getDefinitionsList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (starling.loopyxl.LoopyXL.MethodDefinition element : getDefinitionsList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.LookupResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.LookupResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.LookupResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.LookupResponse result;
      
      // Construct using starling.loopyxl.LoopyXL.LookupResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.LookupResponse();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.LookupResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.LookupResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.LookupResponse.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.LookupResponse getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.LookupResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.LookupResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.LookupResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.LookupResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.definitions_ != java.util.Collections.EMPTY_LIST) {
          result.definitions_ =
            java.util.Collections.unmodifiableList(result.definitions_);
        }
        starling.loopyxl.LoopyXL.LookupResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.LookupResponse) {
          return mergeFrom((starling.loopyxl.LoopyXL.LookupResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.LookupResponse other) {
        if (other == starling.loopyxl.LoopyXL.LookupResponse.getDefaultInstance()) return this;
        if (!other.definitions_.isEmpty()) {
          if (result.definitions_.isEmpty()) {
            result.definitions_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.MethodDefinition>();
          }
          result.definitions_.addAll(other.definitions_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              starling.loopyxl.LoopyXL.MethodDefinition.Builder subBuilder = starling.loopyxl.LoopyXL.MethodDefinition.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDefinitions(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .loopyxl.MethodDefinition definitions = 1;
      public java.util.List<starling.loopyxl.LoopyXL.MethodDefinition> getDefinitionsList() {
        return java.util.Collections.unmodifiableList(result.definitions_);
      }
      public int getDefinitionsCount() {
        return result.getDefinitionsCount();
      }
      public starling.loopyxl.LoopyXL.MethodDefinition getDefinitions(int index) {
        return result.getDefinitions(index);
      }
      public Builder setDefinitions(int index, starling.loopyxl.LoopyXL.MethodDefinition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.definitions_.set(index, value);
        return this;
      }
      public Builder setDefinitions(int index, starling.loopyxl.LoopyXL.MethodDefinition.Builder builderForValue) {
        result.definitions_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDefinitions(starling.loopyxl.LoopyXL.MethodDefinition value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.definitions_.isEmpty()) {
          result.definitions_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.MethodDefinition>();
        }
        result.definitions_.add(value);
        return this;
      }
      public Builder addDefinitions(starling.loopyxl.LoopyXL.MethodDefinition.Builder builderForValue) {
        if (result.definitions_.isEmpty()) {
          result.definitions_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.MethodDefinition>();
        }
        result.definitions_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDefinitions(
          java.lang.Iterable<? extends starling.loopyxl.LoopyXL.MethodDefinition> values) {
        if (result.definitions_.isEmpty()) {
          result.definitions_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.MethodDefinition>();
        }
        super.addAll(values, result.definitions_);
        return this;
      }
      public Builder clearDefinitions() {
        result.definitions_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.LookupResponse)
    }
    
    static {
      defaultInstance = new LookupResponse(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.LookupResponse)
  }
  
  public static final class MethodDefinition extends
      com.google.protobuf.GeneratedMessage {
    // Use MethodDefinition.newBuilder() to construct.
    private MethodDefinition() {
      initFields();
    }
    private MethodDefinition(boolean noInit) {}
    
    private static final MethodDefinition defaultInstance;
    public static MethodDefinition getDefaultInstance() {
      return defaultInstance;
    }
    
    public MethodDefinition getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_MethodDefinition_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_MethodDefinition_fieldAccessorTable;
    }
    
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // repeated string parameterTypes = 3;
    public static final int PARAMETERTYPES_FIELD_NUMBER = 3;
    private java.util.List<java.lang.String> parameterTypes_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getParameterTypesList() {
      return parameterTypes_;
    }
    public int getParameterTypesCount() { return parameterTypes_.size(); }
    public java.lang.String getParameterTypes(int index) {
      return parameterTypes_.get(index);
    }
    
    // required string returnType = 4;
    public static final int RETURNTYPE_FIELD_NUMBER = 4;
    private boolean hasReturnType;
    private java.lang.String returnType_ = "";
    public boolean hasReturnType() { return hasReturnType; }
    public java.lang.String getReturnType() { return returnType_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      if (!hasName) return false;
      if (!hasReturnType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      for (java.lang.String element : getParameterTypesList()) {
        output.writeString(3, element);
      }
      if (hasReturnType()) {
        output.writeString(4, getReturnType());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getParameterTypesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getParameterTypesList().size();
      }
      if (hasReturnType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getReturnType());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.MethodDefinition parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.MethodDefinition parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.MethodDefinition prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.MethodDefinition result;
      
      // Construct using starling.loopyxl.LoopyXL.MethodDefinition.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.MethodDefinition();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.MethodDefinition internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.MethodDefinition();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.MethodDefinition.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.MethodDefinition getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.MethodDefinition.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.MethodDefinition build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.MethodDefinition buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.MethodDefinition buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.parameterTypes_ != java.util.Collections.EMPTY_LIST) {
          result.parameterTypes_ =
            java.util.Collections.unmodifiableList(result.parameterTypes_);
        }
        starling.loopyxl.LoopyXL.MethodDefinition returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.MethodDefinition) {
          return mergeFrom((starling.loopyxl.LoopyXL.MethodDefinition)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.MethodDefinition other) {
        if (other == starling.loopyxl.LoopyXL.MethodDefinition.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (!other.parameterTypes_.isEmpty()) {
          if (result.parameterTypes_.isEmpty()) {
            result.parameterTypes_ = new java.util.ArrayList<java.lang.String>();
          }
          result.parameterTypes_.addAll(other.parameterTypes_);
        }
        if (other.hasReturnType()) {
          setReturnType(other.getReturnType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 26: {
              addParameterTypes(input.readString());
              break;
            }
            case 34: {
              setReturnType(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // required string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // repeated string parameterTypes = 3;
      public java.util.List<java.lang.String> getParameterTypesList() {
        return java.util.Collections.unmodifiableList(result.parameterTypes_);
      }
      public int getParameterTypesCount() {
        return result.getParameterTypesCount();
      }
      public java.lang.String getParameterTypes(int index) {
        return result.getParameterTypes(index);
      }
      public Builder setParameterTypes(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.parameterTypes_.set(index, value);
        return this;
      }
      public Builder addParameterTypes(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.parameterTypes_.isEmpty()) {
          result.parameterTypes_ = new java.util.ArrayList<java.lang.String>();
        }
        result.parameterTypes_.add(value);
        return this;
      }
      public Builder addAllParameterTypes(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.parameterTypes_.isEmpty()) {
          result.parameterTypes_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.parameterTypes_);
        return this;
      }
      public Builder clearParameterTypes() {
        result.parameterTypes_ = java.util.Collections.emptyList();
        return this;
      }
      
      // required string returnType = 4;
      public boolean hasReturnType() {
        return result.hasReturnType();
      }
      public java.lang.String getReturnType() {
        return result.getReturnType();
      }
      public Builder setReturnType(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasReturnType = true;
        result.returnType_ = value;
        return this;
      }
      public Builder clearReturnType() {
        result.hasReturnType = false;
        result.returnType_ = getDefaultInstance().getReturnType();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.MethodDefinition)
    }
    
    static {
      defaultInstance = new MethodDefinition(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.MethodDefinition)
  }
  
  public static final class InvocationRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use InvocationRequest.newBuilder() to construct.
    private InvocationRequest() {
      initFields();
    }
    private InvocationRequest(boolean noInit) {}
    
    private static final InvocationRequest defaultInstance;
    public static InvocationRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public InvocationRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_InvocationRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_InvocationRequest_fieldAccessorTable;
    }
    
    // required int32 methodId = 1;
    public static final int METHODID_FIELD_NUMBER = 1;
    private boolean hasMethodId;
    private int methodId_ = 0;
    public boolean hasMethodId() { return hasMethodId; }
    public int getMethodId() { return methodId_; }
    
    // repeated .loopyxl.InvocationValue parameters = 2;
    public static final int PARAMETERS_FIELD_NUMBER = 2;
    private java.util.List<starling.loopyxl.LoopyXL.InvocationValue> parameters_ =
      java.util.Collections.emptyList();
    public java.util.List<starling.loopyxl.LoopyXL.InvocationValue> getParametersList() {
      return parameters_;
    }
    public int getParametersCount() { return parameters_.size(); }
    public starling.loopyxl.LoopyXL.InvocationValue getParameters(int index) {
      return parameters_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasMethodId) return false;
      for (starling.loopyxl.LoopyXL.InvocationValue element : getParametersList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasMethodId()) {
        output.writeInt32(1, getMethodId());
      }
      for (starling.loopyxl.LoopyXL.InvocationValue element : getParametersList()) {
        output.writeMessage(2, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasMethodId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getMethodId());
      }
      for (starling.loopyxl.LoopyXL.InvocationValue element : getParametersList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.InvocationRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.InvocationRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.InvocationRequest result;
      
      // Construct using starling.loopyxl.LoopyXL.InvocationRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.InvocationRequest();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.InvocationRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.InvocationRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.InvocationRequest.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.InvocationRequest getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.InvocationRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.InvocationRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.InvocationRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.InvocationRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.parameters_ != java.util.Collections.EMPTY_LIST) {
          result.parameters_ =
            java.util.Collections.unmodifiableList(result.parameters_);
        }
        starling.loopyxl.LoopyXL.InvocationRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.InvocationRequest) {
          return mergeFrom((starling.loopyxl.LoopyXL.InvocationRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.InvocationRequest other) {
        if (other == starling.loopyxl.LoopyXL.InvocationRequest.getDefaultInstance()) return this;
        if (other.hasMethodId()) {
          setMethodId(other.getMethodId());
        }
        if (!other.parameters_.isEmpty()) {
          if (result.parameters_.isEmpty()) {
            result.parameters_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.InvocationValue>();
          }
          result.parameters_.addAll(other.parameters_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setMethodId(input.readInt32());
              break;
            }
            case 18: {
              starling.loopyxl.LoopyXL.InvocationValue.Builder subBuilder = starling.loopyxl.LoopyXL.InvocationValue.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addParameters(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required int32 methodId = 1;
      public boolean hasMethodId() {
        return result.hasMethodId();
      }
      public int getMethodId() {
        return result.getMethodId();
      }
      public Builder setMethodId(int value) {
        result.hasMethodId = true;
        result.methodId_ = value;
        return this;
      }
      public Builder clearMethodId() {
        result.hasMethodId = false;
        result.methodId_ = 0;
        return this;
      }
      
      // repeated .loopyxl.InvocationValue parameters = 2;
      public java.util.List<starling.loopyxl.LoopyXL.InvocationValue> getParametersList() {
        return java.util.Collections.unmodifiableList(result.parameters_);
      }
      public int getParametersCount() {
        return result.getParametersCount();
      }
      public starling.loopyxl.LoopyXL.InvocationValue getParameters(int index) {
        return result.getParameters(index);
      }
      public Builder setParameters(int index, starling.loopyxl.LoopyXL.InvocationValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.parameters_.set(index, value);
        return this;
      }
      public Builder setParameters(int index, starling.loopyxl.LoopyXL.InvocationValue.Builder builderForValue) {
        result.parameters_.set(index, builderForValue.build());
        return this;
      }
      public Builder addParameters(starling.loopyxl.LoopyXL.InvocationValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.parameters_.isEmpty()) {
          result.parameters_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.InvocationValue>();
        }
        result.parameters_.add(value);
        return this;
      }
      public Builder addParameters(starling.loopyxl.LoopyXL.InvocationValue.Builder builderForValue) {
        if (result.parameters_.isEmpty()) {
          result.parameters_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.InvocationValue>();
        }
        result.parameters_.add(builderForValue.build());
        return this;
      }
      public Builder addAllParameters(
          java.lang.Iterable<? extends starling.loopyxl.LoopyXL.InvocationValue> values) {
        if (result.parameters_.isEmpty()) {
          result.parameters_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.InvocationValue>();
        }
        super.addAll(values, result.parameters_);
        return this;
      }
      public Builder clearParameters() {
        result.parameters_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.InvocationRequest)
    }
    
    static {
      defaultInstance = new InvocationRequest(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.InvocationRequest)
  }
  
  public static final class InvocationResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use InvocationResponse.newBuilder() to construct.
    private InvocationResponse() {
      initFields();
    }
    private InvocationResponse(boolean noInit) {}
    
    private static final InvocationResponse defaultInstance;
    public static InvocationResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public InvocationResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_InvocationResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_InvocationResponse_fieldAccessorTable;
    }
    
    // required .loopyxl.InvocationValue result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean hasResult;
    private starling.loopyxl.LoopyXL.InvocationValue result_;
    public boolean hasResult() { return hasResult; }
    public starling.loopyxl.LoopyXL.InvocationValue getResult() { return result_; }
    
    private void initFields() {
      result_ = starling.loopyxl.LoopyXL.InvocationValue.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasResult) return false;
      if (!getResult().isInitialized()) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResult()) {
        output.writeMessage(1, getResult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getResult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.InvocationResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.InvocationResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.InvocationResponse result;
      
      // Construct using starling.loopyxl.LoopyXL.InvocationResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.InvocationResponse();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.InvocationResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.InvocationResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.InvocationResponse.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.InvocationResponse getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.InvocationResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.InvocationResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.InvocationResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.InvocationResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        starling.loopyxl.LoopyXL.InvocationResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.InvocationResponse) {
          return mergeFrom((starling.loopyxl.LoopyXL.InvocationResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.InvocationResponse other) {
        if (other == starling.loopyxl.LoopyXL.InvocationResponse.getDefaultInstance()) return this;
        if (other.hasResult()) {
          mergeResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              starling.loopyxl.LoopyXL.InvocationValue.Builder subBuilder = starling.loopyxl.LoopyXL.InvocationValue.newBuilder();
              if (hasResult()) {
                subBuilder.mergeFrom(getResult());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setResult(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .loopyxl.InvocationValue result = 1;
      public boolean hasResult() {
        return result.hasResult();
      }
      public starling.loopyxl.LoopyXL.InvocationValue getResult() {
        return result.getResult();
      }
      public Builder setResult(starling.loopyxl.LoopyXL.InvocationValue value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder setResult(starling.loopyxl.LoopyXL.InvocationValue.Builder builderForValue) {
        result.hasResult = true;
        result.result_ = builderForValue.build();
        return this;
      }
      public Builder mergeResult(starling.loopyxl.LoopyXL.InvocationValue value) {
        if (result.hasResult() &&
            result.result_ != starling.loopyxl.LoopyXL.InvocationValue.getDefaultInstance()) {
          result.result_ =
            starling.loopyxl.LoopyXL.InvocationValue.newBuilder(result.result_).mergeFrom(value).buildPartial();
        } else {
          result.result_ = value;
        }
        result.hasResult = true;
        return this;
      }
      public Builder clearResult() {
        result.hasResult = false;
        result.result_ = starling.loopyxl.LoopyXL.InvocationValue.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.InvocationResponse)
    }
    
    static {
      defaultInstance = new InvocationResponse(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.InvocationResponse)
  }
  
  public static final class InvocationValue extends
      com.google.protobuf.GeneratedMessage {
    // Use InvocationValue.newBuilder() to construct.
    private InvocationValue() {
      initFields();
    }
    private InvocationValue(boolean noInit) {}
    
    private static final InvocationValue defaultInstance;
    public static InvocationValue getDefaultInstance() {
      return defaultInstance;
    }
    
    public InvocationValue getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_InvocationValue_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_InvocationValue_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      DOUBLE_VALUE(0, 0),
      DOUBLE_ARRAY(1, 1),
      DOUBLE_MATRIX(2, 2),
      STRING_VALUE(3, 3),
      STRING_ARRAY(4, 4),
      STRING_MATRIX(5, 5),
      OBJECT_VALUE(6, 6),
      OBJECT_ARRAY(7, 7),
      OBJECT_MATRIX(8, 8),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return DOUBLE_VALUE;
          case 1: return DOUBLE_ARRAY;
          case 2: return DOUBLE_MATRIX;
          case 3: return STRING_VALUE;
          case 4: return STRING_ARRAY;
          case 5: return STRING_MATRIX;
          case 6: return OBJECT_VALUE;
          case 7: return OBJECT_ARRAY;
          case 8: return OBJECT_MATRIX;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return starling.loopyxl.LoopyXL.InvocationValue.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        DOUBLE_VALUE, DOUBLE_ARRAY, DOUBLE_MATRIX, STRING_VALUE, STRING_ARRAY, STRING_MATRIX, OBJECT_VALUE, OBJECT_ARRAY, OBJECT_MATRIX, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        starling.loopyxl.LoopyXL.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:loopyxl.InvocationValue.Type)
    }
    
    // required .loopyxl.InvocationValue.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private starling.loopyxl.LoopyXL.InvocationValue.Type type_;
    public boolean hasType() { return hasType; }
    public starling.loopyxl.LoopyXL.InvocationValue.Type getType() { return type_; }
    
    // optional double doubleValue = 2;
    public static final int DOUBLEVALUE_FIELD_NUMBER = 2;
    private boolean hasDoubleValue;
    private double doubleValue_ = 0D;
    public boolean hasDoubleValue() { return hasDoubleValue; }
    public double getDoubleValue() { return doubleValue_; }
    
    // repeated double doubleArray = 3;
    public static final int DOUBLEARRAY_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Double> doubleArray_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getDoubleArrayList() {
      return doubleArray_;
    }
    public int getDoubleArrayCount() { return doubleArray_.size(); }
    public double getDoubleArray(int index) {
      return doubleArray_.get(index);
    }
    
    // repeated .loopyxl.DoubleArray doubleMatrix = 4;
    public static final int DOUBLEMATRIX_FIELD_NUMBER = 4;
    private java.util.List<starling.loopyxl.LoopyXL.DoubleArray> doubleMatrix_ =
      java.util.Collections.emptyList();
    public java.util.List<starling.loopyxl.LoopyXL.DoubleArray> getDoubleMatrixList() {
      return doubleMatrix_;
    }
    public int getDoubleMatrixCount() { return doubleMatrix_.size(); }
    public starling.loopyxl.LoopyXL.DoubleArray getDoubleMatrix(int index) {
      return doubleMatrix_.get(index);
    }
    
    // optional string stringValue = 5;
    public static final int STRINGVALUE_FIELD_NUMBER = 5;
    private boolean hasStringValue;
    private java.lang.String stringValue_ = "";
    public boolean hasStringValue() { return hasStringValue; }
    public java.lang.String getStringValue() { return stringValue_; }
    
    // repeated string stringArray = 6;
    public static final int STRINGARRAY_FIELD_NUMBER = 6;
    private java.util.List<java.lang.String> stringArray_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getStringArrayList() {
      return stringArray_;
    }
    public int getStringArrayCount() { return stringArray_.size(); }
    public java.lang.String getStringArray(int index) {
      return stringArray_.get(index);
    }
    
    // repeated .loopyxl.StringArray stringMatrix = 7;
    public static final int STRINGMATRIX_FIELD_NUMBER = 7;
    private java.util.List<starling.loopyxl.LoopyXL.StringArray> stringMatrix_ =
      java.util.Collections.emptyList();
    public java.util.List<starling.loopyxl.LoopyXL.StringArray> getStringMatrixList() {
      return stringMatrix_;
    }
    public int getStringMatrixCount() { return stringMatrix_.size(); }
    public starling.loopyxl.LoopyXL.StringArray getStringMatrix(int index) {
      return stringMatrix_.get(index);
    }
    
    // optional .loopyxl.TypedObject objectValue = 8;
    public static final int OBJECTVALUE_FIELD_NUMBER = 8;
    private boolean hasObjectValue;
    private starling.loopyxl.LoopyXL.TypedObject objectValue_;
    public boolean hasObjectValue() { return hasObjectValue; }
    public starling.loopyxl.LoopyXL.TypedObject getObjectValue() { return objectValue_; }
    
    // repeated .loopyxl.TypedObject objectArray = 9;
    public static final int OBJECTARRAY_FIELD_NUMBER = 9;
    private java.util.List<starling.loopyxl.LoopyXL.TypedObject> objectArray_ =
      java.util.Collections.emptyList();
    public java.util.List<starling.loopyxl.LoopyXL.TypedObject> getObjectArrayList() {
      return objectArray_;
    }
    public int getObjectArrayCount() { return objectArray_.size(); }
    public starling.loopyxl.LoopyXL.TypedObject getObjectArray(int index) {
      return objectArray_.get(index);
    }
    
    // repeated .loopyxl.TypedArray objectMatrix = 10;
    public static final int OBJECTMATRIX_FIELD_NUMBER = 10;
    private java.util.List<starling.loopyxl.LoopyXL.TypedArray> objectMatrix_ =
      java.util.Collections.emptyList();
    public java.util.List<starling.loopyxl.LoopyXL.TypedArray> getObjectMatrixList() {
      return objectMatrix_;
    }
    public int getObjectMatrixCount() { return objectMatrix_.size(); }
    public starling.loopyxl.LoopyXL.TypedArray getObjectMatrix(int index) {
      return objectMatrix_.get(index);
    }
    
    private void initFields() {
      type_ = starling.loopyxl.LoopyXL.InvocationValue.Type.DOUBLE_VALUE;
      objectValue_ = starling.loopyxl.LoopyXL.TypedObject.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      if (hasObjectValue()) {
        if (!getObjectValue().isInitialized()) return false;
      }
      for (starling.loopyxl.LoopyXL.TypedObject element : getObjectArrayList()) {
        if (!element.isInitialized()) return false;
      }
      for (starling.loopyxl.LoopyXL.TypedArray element : getObjectMatrixList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasDoubleValue()) {
        output.writeDouble(2, getDoubleValue());
      }
      for (double element : getDoubleArrayList()) {
        output.writeDouble(3, element);
      }
      for (starling.loopyxl.LoopyXL.DoubleArray element : getDoubleMatrixList()) {
        output.writeMessage(4, element);
      }
      if (hasStringValue()) {
        output.writeString(5, getStringValue());
      }
      for (java.lang.String element : getStringArrayList()) {
        output.writeString(6, element);
      }
      for (starling.loopyxl.LoopyXL.StringArray element : getStringMatrixList()) {
        output.writeMessage(7, element);
      }
      if (hasObjectValue()) {
        output.writeMessage(8, getObjectValue());
      }
      for (starling.loopyxl.LoopyXL.TypedObject element : getObjectArrayList()) {
        output.writeMessage(9, element);
      }
      for (starling.loopyxl.LoopyXL.TypedArray element : getObjectMatrixList()) {
        output.writeMessage(10, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasDoubleValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getDoubleValue());
      }
      {
        int dataSize = 0;
        dataSize = 8 * getDoubleArrayList().size();
        size += dataSize;
        size += 1 * getDoubleArrayList().size();
      }
      for (starling.loopyxl.LoopyXL.DoubleArray element : getDoubleMatrixList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      if (hasStringValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getStringValue());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getStringArrayList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getStringArrayList().size();
      }
      for (starling.loopyxl.LoopyXL.StringArray element : getStringMatrixList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, element);
      }
      if (hasObjectValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getObjectValue());
      }
      for (starling.loopyxl.LoopyXL.TypedObject element : getObjectArrayList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, element);
      }
      for (starling.loopyxl.LoopyXL.TypedArray element : getObjectMatrixList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.InvocationValue parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.InvocationValue parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.InvocationValue prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.InvocationValue result;
      
      // Construct using starling.loopyxl.LoopyXL.InvocationValue.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.InvocationValue();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.InvocationValue internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.InvocationValue();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.InvocationValue.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.InvocationValue getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.InvocationValue.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.InvocationValue build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.InvocationValue buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.InvocationValue buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.doubleArray_ != java.util.Collections.EMPTY_LIST) {
          result.doubleArray_ =
            java.util.Collections.unmodifiableList(result.doubleArray_);
        }
        if (result.doubleMatrix_ != java.util.Collections.EMPTY_LIST) {
          result.doubleMatrix_ =
            java.util.Collections.unmodifiableList(result.doubleMatrix_);
        }
        if (result.stringArray_ != java.util.Collections.EMPTY_LIST) {
          result.stringArray_ =
            java.util.Collections.unmodifiableList(result.stringArray_);
        }
        if (result.stringMatrix_ != java.util.Collections.EMPTY_LIST) {
          result.stringMatrix_ =
            java.util.Collections.unmodifiableList(result.stringMatrix_);
        }
        if (result.objectArray_ != java.util.Collections.EMPTY_LIST) {
          result.objectArray_ =
            java.util.Collections.unmodifiableList(result.objectArray_);
        }
        if (result.objectMatrix_ != java.util.Collections.EMPTY_LIST) {
          result.objectMatrix_ =
            java.util.Collections.unmodifiableList(result.objectMatrix_);
        }
        starling.loopyxl.LoopyXL.InvocationValue returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.InvocationValue) {
          return mergeFrom((starling.loopyxl.LoopyXL.InvocationValue)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.InvocationValue other) {
        if (other == starling.loopyxl.LoopyXL.InvocationValue.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDoubleValue()) {
          setDoubleValue(other.getDoubleValue());
        }
        if (!other.doubleArray_.isEmpty()) {
          if (result.doubleArray_.isEmpty()) {
            result.doubleArray_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.doubleArray_.addAll(other.doubleArray_);
        }
        if (!other.doubleMatrix_.isEmpty()) {
          if (result.doubleMatrix_.isEmpty()) {
            result.doubleMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.DoubleArray>();
          }
          result.doubleMatrix_.addAll(other.doubleMatrix_);
        }
        if (other.hasStringValue()) {
          setStringValue(other.getStringValue());
        }
        if (!other.stringArray_.isEmpty()) {
          if (result.stringArray_.isEmpty()) {
            result.stringArray_ = new java.util.ArrayList<java.lang.String>();
          }
          result.stringArray_.addAll(other.stringArray_);
        }
        if (!other.stringMatrix_.isEmpty()) {
          if (result.stringMatrix_.isEmpty()) {
            result.stringMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.StringArray>();
          }
          result.stringMatrix_.addAll(other.stringMatrix_);
        }
        if (other.hasObjectValue()) {
          mergeObjectValue(other.getObjectValue());
        }
        if (!other.objectArray_.isEmpty()) {
          if (result.objectArray_.isEmpty()) {
            result.objectArray_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedObject>();
          }
          result.objectArray_.addAll(other.objectArray_);
        }
        if (!other.objectMatrix_.isEmpty()) {
          if (result.objectMatrix_.isEmpty()) {
            result.objectMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedArray>();
          }
          result.objectMatrix_.addAll(other.objectMatrix_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              starling.loopyxl.LoopyXL.InvocationValue.Type value = starling.loopyxl.LoopyXL.InvocationValue.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 17: {
              setDoubleValue(input.readDouble());
              break;
            }
            case 25: {
              addDoubleArray(input.readDouble());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addDoubleArray(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
            case 34: {
              starling.loopyxl.LoopyXL.DoubleArray.Builder subBuilder = starling.loopyxl.LoopyXL.DoubleArray.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addDoubleMatrix(subBuilder.buildPartial());
              break;
            }
            case 42: {
              setStringValue(input.readString());
              break;
            }
            case 50: {
              addStringArray(input.readString());
              break;
            }
            case 58: {
              starling.loopyxl.LoopyXL.StringArray.Builder subBuilder = starling.loopyxl.LoopyXL.StringArray.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addStringMatrix(subBuilder.buildPartial());
              break;
            }
            case 66: {
              starling.loopyxl.LoopyXL.TypedObject.Builder subBuilder = starling.loopyxl.LoopyXL.TypedObject.newBuilder();
              if (hasObjectValue()) {
                subBuilder.mergeFrom(getObjectValue());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setObjectValue(subBuilder.buildPartial());
              break;
            }
            case 74: {
              starling.loopyxl.LoopyXL.TypedObject.Builder subBuilder = starling.loopyxl.LoopyXL.TypedObject.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addObjectArray(subBuilder.buildPartial());
              break;
            }
            case 82: {
              starling.loopyxl.LoopyXL.TypedArray.Builder subBuilder = starling.loopyxl.LoopyXL.TypedArray.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addObjectMatrix(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .loopyxl.InvocationValue.Type type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public starling.loopyxl.LoopyXL.InvocationValue.Type getType() {
        return result.getType();
      }
      public Builder setType(starling.loopyxl.LoopyXL.InvocationValue.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = starling.loopyxl.LoopyXL.InvocationValue.Type.DOUBLE_VALUE;
        return this;
      }
      
      // optional double doubleValue = 2;
      public boolean hasDoubleValue() {
        return result.hasDoubleValue();
      }
      public double getDoubleValue() {
        return result.getDoubleValue();
      }
      public Builder setDoubleValue(double value) {
        result.hasDoubleValue = true;
        result.doubleValue_ = value;
        return this;
      }
      public Builder clearDoubleValue() {
        result.hasDoubleValue = false;
        result.doubleValue_ = 0D;
        return this;
      }
      
      // repeated double doubleArray = 3;
      public java.util.List<java.lang.Double> getDoubleArrayList() {
        return java.util.Collections.unmodifiableList(result.doubleArray_);
      }
      public int getDoubleArrayCount() {
        return result.getDoubleArrayCount();
      }
      public double getDoubleArray(int index) {
        return result.getDoubleArray(index);
      }
      public Builder setDoubleArray(int index, double value) {
        result.doubleArray_.set(index, value);
        return this;
      }
      public Builder addDoubleArray(double value) {
        if (result.doubleArray_.isEmpty()) {
          result.doubleArray_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.doubleArray_.add(value);
        return this;
      }
      public Builder addAllDoubleArray(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.doubleArray_.isEmpty()) {
          result.doubleArray_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.doubleArray_);
        return this;
      }
      public Builder clearDoubleArray() {
        result.doubleArray_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .loopyxl.DoubleArray doubleMatrix = 4;
      public java.util.List<starling.loopyxl.LoopyXL.DoubleArray> getDoubleMatrixList() {
        return java.util.Collections.unmodifiableList(result.doubleMatrix_);
      }
      public int getDoubleMatrixCount() {
        return result.getDoubleMatrixCount();
      }
      public starling.loopyxl.LoopyXL.DoubleArray getDoubleMatrix(int index) {
        return result.getDoubleMatrix(index);
      }
      public Builder setDoubleMatrix(int index, starling.loopyxl.LoopyXL.DoubleArray value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.doubleMatrix_.set(index, value);
        return this;
      }
      public Builder setDoubleMatrix(int index, starling.loopyxl.LoopyXL.DoubleArray.Builder builderForValue) {
        result.doubleMatrix_.set(index, builderForValue.build());
        return this;
      }
      public Builder addDoubleMatrix(starling.loopyxl.LoopyXL.DoubleArray value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.doubleMatrix_.isEmpty()) {
          result.doubleMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.DoubleArray>();
        }
        result.doubleMatrix_.add(value);
        return this;
      }
      public Builder addDoubleMatrix(starling.loopyxl.LoopyXL.DoubleArray.Builder builderForValue) {
        if (result.doubleMatrix_.isEmpty()) {
          result.doubleMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.DoubleArray>();
        }
        result.doubleMatrix_.add(builderForValue.build());
        return this;
      }
      public Builder addAllDoubleMatrix(
          java.lang.Iterable<? extends starling.loopyxl.LoopyXL.DoubleArray> values) {
        if (result.doubleMatrix_.isEmpty()) {
          result.doubleMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.DoubleArray>();
        }
        super.addAll(values, result.doubleMatrix_);
        return this;
      }
      public Builder clearDoubleMatrix() {
        result.doubleMatrix_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional string stringValue = 5;
      public boolean hasStringValue() {
        return result.hasStringValue();
      }
      public java.lang.String getStringValue() {
        return result.getStringValue();
      }
      public Builder setStringValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStringValue = true;
        result.stringValue_ = value;
        return this;
      }
      public Builder clearStringValue() {
        result.hasStringValue = false;
        result.stringValue_ = getDefaultInstance().getStringValue();
        return this;
      }
      
      // repeated string stringArray = 6;
      public java.util.List<java.lang.String> getStringArrayList() {
        return java.util.Collections.unmodifiableList(result.stringArray_);
      }
      public int getStringArrayCount() {
        return result.getStringArrayCount();
      }
      public java.lang.String getStringArray(int index) {
        return result.getStringArray(index);
      }
      public Builder setStringArray(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.stringArray_.set(index, value);
        return this;
      }
      public Builder addStringArray(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.stringArray_.isEmpty()) {
          result.stringArray_ = new java.util.ArrayList<java.lang.String>();
        }
        result.stringArray_.add(value);
        return this;
      }
      public Builder addAllStringArray(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.stringArray_.isEmpty()) {
          result.stringArray_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.stringArray_);
        return this;
      }
      public Builder clearStringArray() {
        result.stringArray_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .loopyxl.StringArray stringMatrix = 7;
      public java.util.List<starling.loopyxl.LoopyXL.StringArray> getStringMatrixList() {
        return java.util.Collections.unmodifiableList(result.stringMatrix_);
      }
      public int getStringMatrixCount() {
        return result.getStringMatrixCount();
      }
      public starling.loopyxl.LoopyXL.StringArray getStringMatrix(int index) {
        return result.getStringMatrix(index);
      }
      public Builder setStringMatrix(int index, starling.loopyxl.LoopyXL.StringArray value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.stringMatrix_.set(index, value);
        return this;
      }
      public Builder setStringMatrix(int index, starling.loopyxl.LoopyXL.StringArray.Builder builderForValue) {
        result.stringMatrix_.set(index, builderForValue.build());
        return this;
      }
      public Builder addStringMatrix(starling.loopyxl.LoopyXL.StringArray value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.stringMatrix_.isEmpty()) {
          result.stringMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.StringArray>();
        }
        result.stringMatrix_.add(value);
        return this;
      }
      public Builder addStringMatrix(starling.loopyxl.LoopyXL.StringArray.Builder builderForValue) {
        if (result.stringMatrix_.isEmpty()) {
          result.stringMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.StringArray>();
        }
        result.stringMatrix_.add(builderForValue.build());
        return this;
      }
      public Builder addAllStringMatrix(
          java.lang.Iterable<? extends starling.loopyxl.LoopyXL.StringArray> values) {
        if (result.stringMatrix_.isEmpty()) {
          result.stringMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.StringArray>();
        }
        super.addAll(values, result.stringMatrix_);
        return this;
      }
      public Builder clearStringMatrix() {
        result.stringMatrix_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .loopyxl.TypedObject objectValue = 8;
      public boolean hasObjectValue() {
        return result.hasObjectValue();
      }
      public starling.loopyxl.LoopyXL.TypedObject getObjectValue() {
        return result.getObjectValue();
      }
      public Builder setObjectValue(starling.loopyxl.LoopyXL.TypedObject value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasObjectValue = true;
        result.objectValue_ = value;
        return this;
      }
      public Builder setObjectValue(starling.loopyxl.LoopyXL.TypedObject.Builder builderForValue) {
        result.hasObjectValue = true;
        result.objectValue_ = builderForValue.build();
        return this;
      }
      public Builder mergeObjectValue(starling.loopyxl.LoopyXL.TypedObject value) {
        if (result.hasObjectValue() &&
            result.objectValue_ != starling.loopyxl.LoopyXL.TypedObject.getDefaultInstance()) {
          result.objectValue_ =
            starling.loopyxl.LoopyXL.TypedObject.newBuilder(result.objectValue_).mergeFrom(value).buildPartial();
        } else {
          result.objectValue_ = value;
        }
        result.hasObjectValue = true;
        return this;
      }
      public Builder clearObjectValue() {
        result.hasObjectValue = false;
        result.objectValue_ = starling.loopyxl.LoopyXL.TypedObject.getDefaultInstance();
        return this;
      }
      
      // repeated .loopyxl.TypedObject objectArray = 9;
      public java.util.List<starling.loopyxl.LoopyXL.TypedObject> getObjectArrayList() {
        return java.util.Collections.unmodifiableList(result.objectArray_);
      }
      public int getObjectArrayCount() {
        return result.getObjectArrayCount();
      }
      public starling.loopyxl.LoopyXL.TypedObject getObjectArray(int index) {
        return result.getObjectArray(index);
      }
      public Builder setObjectArray(int index, starling.loopyxl.LoopyXL.TypedObject value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.objectArray_.set(index, value);
        return this;
      }
      public Builder setObjectArray(int index, starling.loopyxl.LoopyXL.TypedObject.Builder builderForValue) {
        result.objectArray_.set(index, builderForValue.build());
        return this;
      }
      public Builder addObjectArray(starling.loopyxl.LoopyXL.TypedObject value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.objectArray_.isEmpty()) {
          result.objectArray_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedObject>();
        }
        result.objectArray_.add(value);
        return this;
      }
      public Builder addObjectArray(starling.loopyxl.LoopyXL.TypedObject.Builder builderForValue) {
        if (result.objectArray_.isEmpty()) {
          result.objectArray_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedObject>();
        }
        result.objectArray_.add(builderForValue.build());
        return this;
      }
      public Builder addAllObjectArray(
          java.lang.Iterable<? extends starling.loopyxl.LoopyXL.TypedObject> values) {
        if (result.objectArray_.isEmpty()) {
          result.objectArray_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedObject>();
        }
        super.addAll(values, result.objectArray_);
        return this;
      }
      public Builder clearObjectArray() {
        result.objectArray_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .loopyxl.TypedArray objectMatrix = 10;
      public java.util.List<starling.loopyxl.LoopyXL.TypedArray> getObjectMatrixList() {
        return java.util.Collections.unmodifiableList(result.objectMatrix_);
      }
      public int getObjectMatrixCount() {
        return result.getObjectMatrixCount();
      }
      public starling.loopyxl.LoopyXL.TypedArray getObjectMatrix(int index) {
        return result.getObjectMatrix(index);
      }
      public Builder setObjectMatrix(int index, starling.loopyxl.LoopyXL.TypedArray value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.objectMatrix_.set(index, value);
        return this;
      }
      public Builder setObjectMatrix(int index, starling.loopyxl.LoopyXL.TypedArray.Builder builderForValue) {
        result.objectMatrix_.set(index, builderForValue.build());
        return this;
      }
      public Builder addObjectMatrix(starling.loopyxl.LoopyXL.TypedArray value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.objectMatrix_.isEmpty()) {
          result.objectMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedArray>();
        }
        result.objectMatrix_.add(value);
        return this;
      }
      public Builder addObjectMatrix(starling.loopyxl.LoopyXL.TypedArray.Builder builderForValue) {
        if (result.objectMatrix_.isEmpty()) {
          result.objectMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedArray>();
        }
        result.objectMatrix_.add(builderForValue.build());
        return this;
      }
      public Builder addAllObjectMatrix(
          java.lang.Iterable<? extends starling.loopyxl.LoopyXL.TypedArray> values) {
        if (result.objectMatrix_.isEmpty()) {
          result.objectMatrix_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedArray>();
        }
        super.addAll(values, result.objectMatrix_);
        return this;
      }
      public Builder clearObjectMatrix() {
        result.objectMatrix_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.InvocationValue)
    }
    
    static {
      defaultInstance = new InvocationValue(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.InvocationValue)
  }
  
  public static final class TypedObject extends
      com.google.protobuf.GeneratedMessage {
    // Use TypedObject.newBuilder() to construct.
    private TypedObject() {
      initFields();
    }
    private TypedObject(boolean noInit) {}
    
    private static final TypedObject defaultInstance;
    public static TypedObject getDefaultInstance() {
      return defaultInstance;
    }
    
    public TypedObject getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_TypedObject_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_TypedObject_fieldAccessorTable;
    }
    
    public enum Type
        implements com.google.protobuf.ProtocolMessageEnum {
      DOUBLE(0, 0),
      STRING(1, 1),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static Type valueOf(int value) {
        switch (value) {
          case 0: return DOUBLE;
          case 1: return STRING;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<Type>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Type>() {
              public Type findValueByNumber(int number) {
                return Type.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return starling.loopyxl.LoopyXL.TypedObject.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final Type[] VALUES = {
        DOUBLE, STRING, 
      };
      public static Type valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private Type(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        starling.loopyxl.LoopyXL.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:loopyxl.TypedObject.Type)
    }
    
    // required .loopyxl.TypedObject.Type type = 1;
    public static final int TYPE_FIELD_NUMBER = 1;
    private boolean hasType;
    private starling.loopyxl.LoopyXL.TypedObject.Type type_;
    public boolean hasType() { return hasType; }
    public starling.loopyxl.LoopyXL.TypedObject.Type getType() { return type_; }
    
    // optional double doubleValue = 2;
    public static final int DOUBLEVALUE_FIELD_NUMBER = 2;
    private boolean hasDoubleValue;
    private double doubleValue_ = 0D;
    public boolean hasDoubleValue() { return hasDoubleValue; }
    public double getDoubleValue() { return doubleValue_; }
    
    // optional string stringValue = 3;
    public static final int STRINGVALUE_FIELD_NUMBER = 3;
    private boolean hasStringValue;
    private java.lang.String stringValue_ = "";
    public boolean hasStringValue() { return hasStringValue; }
    public java.lang.String getStringValue() { return stringValue_; }
    
    private void initFields() {
      type_ = starling.loopyxl.LoopyXL.TypedObject.Type.DOUBLE;
    }
    public final boolean isInitialized() {
      if (!hasType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasType()) {
        output.writeEnum(1, getType().getNumber());
      }
      if (hasDoubleValue()) {
        output.writeDouble(2, getDoubleValue());
      }
      if (hasStringValue()) {
        output.writeString(3, getStringValue());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getType().getNumber());
      }
      if (hasDoubleValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(2, getDoubleValue());
      }
      if (hasStringValue()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getStringValue());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.TypedObject parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedObject parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.TypedObject prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.TypedObject result;
      
      // Construct using starling.loopyxl.LoopyXL.TypedObject.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.TypedObject();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.TypedObject internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.TypedObject();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.TypedObject.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.TypedObject getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.TypedObject.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.TypedObject build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.TypedObject buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.TypedObject buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        starling.loopyxl.LoopyXL.TypedObject returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.TypedObject) {
          return mergeFrom((starling.loopyxl.LoopyXL.TypedObject)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.TypedObject other) {
        if (other == starling.loopyxl.LoopyXL.TypedObject.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasDoubleValue()) {
          setDoubleValue(other.getDoubleValue());
        }
        if (other.hasStringValue()) {
          setStringValue(other.getStringValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              starling.loopyxl.LoopyXL.TypedObject.Type value = starling.loopyxl.LoopyXL.TypedObject.Type.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setType(value);
              }
              break;
            }
            case 17: {
              setDoubleValue(input.readDouble());
              break;
            }
            case 26: {
              setStringValue(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .loopyxl.TypedObject.Type type = 1;
      public boolean hasType() {
        return result.hasType();
      }
      public starling.loopyxl.LoopyXL.TypedObject.Type getType() {
        return result.getType();
      }
      public Builder setType(starling.loopyxl.LoopyXL.TypedObject.Type value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasType = true;
        result.type_ = value;
        return this;
      }
      public Builder clearType() {
        result.hasType = false;
        result.type_ = starling.loopyxl.LoopyXL.TypedObject.Type.DOUBLE;
        return this;
      }
      
      // optional double doubleValue = 2;
      public boolean hasDoubleValue() {
        return result.hasDoubleValue();
      }
      public double getDoubleValue() {
        return result.getDoubleValue();
      }
      public Builder setDoubleValue(double value) {
        result.hasDoubleValue = true;
        result.doubleValue_ = value;
        return this;
      }
      public Builder clearDoubleValue() {
        result.hasDoubleValue = false;
        result.doubleValue_ = 0D;
        return this;
      }
      
      // optional string stringValue = 3;
      public boolean hasStringValue() {
        return result.hasStringValue();
      }
      public java.lang.String getStringValue() {
        return result.getStringValue();
      }
      public Builder setStringValue(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasStringValue = true;
        result.stringValue_ = value;
        return this;
      }
      public Builder clearStringValue() {
        result.hasStringValue = false;
        result.stringValue_ = getDefaultInstance().getStringValue();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.TypedObject)
    }
    
    static {
      defaultInstance = new TypedObject(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.TypedObject)
  }
  
  public static final class DoubleArray extends
      com.google.protobuf.GeneratedMessage {
    // Use DoubleArray.newBuilder() to construct.
    private DoubleArray() {
      initFields();
    }
    private DoubleArray(boolean noInit) {}
    
    private static final DoubleArray defaultInstance;
    public static DoubleArray getDefaultInstance() {
      return defaultInstance;
    }
    
    public DoubleArray getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_DoubleArray_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_DoubleArray_fieldAccessorTable;
    }
    
    // repeated double values = 1;
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Double> values_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Double> getValuesList() {
      return values_;
    }
    public int getValuesCount() { return values_.size(); }
    public double getValues(int index) {
      return values_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (double element : getValuesList()) {
        output.writeDouble(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        dataSize = 8 * getValuesList().size();
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.DoubleArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.DoubleArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.DoubleArray prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.DoubleArray result;
      
      // Construct using starling.loopyxl.LoopyXL.DoubleArray.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.DoubleArray();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.DoubleArray internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.DoubleArray();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.DoubleArray.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.DoubleArray getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.DoubleArray.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.DoubleArray build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.DoubleArray buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.DoubleArray buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.values_ != java.util.Collections.EMPTY_LIST) {
          result.values_ =
            java.util.Collections.unmodifiableList(result.values_);
        }
        starling.loopyxl.LoopyXL.DoubleArray returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.DoubleArray) {
          return mergeFrom((starling.loopyxl.LoopyXL.DoubleArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.DoubleArray other) {
        if (other == starling.loopyxl.LoopyXL.DoubleArray.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (result.values_.isEmpty()) {
            result.values_ = new java.util.ArrayList<java.lang.Double>();
          }
          result.values_.addAll(other.values_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 9: {
              addValues(input.readDouble());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addValues(input.readDouble());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      }
      
      
      // repeated double values = 1;
      public java.util.List<java.lang.Double> getValuesList() {
        return java.util.Collections.unmodifiableList(result.values_);
      }
      public int getValuesCount() {
        return result.getValuesCount();
      }
      public double getValues(int index) {
        return result.getValues(index);
      }
      public Builder setValues(int index, double value) {
        result.values_.set(index, value);
        return this;
      }
      public Builder addValues(double value) {
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<java.lang.Double>();
        }
        result.values_.add(value);
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.Double> values) {
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<java.lang.Double>();
        }
        super.addAll(values, result.values_);
        return this;
      }
      public Builder clearValues() {
        result.values_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.DoubleArray)
    }
    
    static {
      defaultInstance = new DoubleArray(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.DoubleArray)
  }
  
  public static final class StringArray extends
      com.google.protobuf.GeneratedMessage {
    // Use StringArray.newBuilder() to construct.
    private StringArray() {
      initFields();
    }
    private StringArray(boolean noInit) {}
    
    private static final StringArray defaultInstance;
    public static StringArray getDefaultInstance() {
      return defaultInstance;
    }
    
    public StringArray getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_StringArray_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_StringArray_fieldAccessorTable;
    }
    
    // repeated string values = 1;
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<java.lang.String> values_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getValuesList() {
      return values_;
    }
    public int getValuesCount() { return values_.size(); }
    public java.lang.String getValues(int index) {
      return values_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (java.lang.String element : getValuesList()) {
        output.writeString(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (java.lang.String element : getValuesList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getValuesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.StringArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.StringArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.StringArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.StringArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.StringArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.StringArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.StringArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.StringArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.StringArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.StringArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.StringArray prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.StringArray result;
      
      // Construct using starling.loopyxl.LoopyXL.StringArray.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.StringArray();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.StringArray internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.StringArray();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.StringArray.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.StringArray getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.StringArray.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.StringArray build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.StringArray buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.StringArray buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.values_ != java.util.Collections.EMPTY_LIST) {
          result.values_ =
            java.util.Collections.unmodifiableList(result.values_);
        }
        starling.loopyxl.LoopyXL.StringArray returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.StringArray) {
          return mergeFrom((starling.loopyxl.LoopyXL.StringArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.StringArray other) {
        if (other == starling.loopyxl.LoopyXL.StringArray.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (result.values_.isEmpty()) {
            result.values_ = new java.util.ArrayList<java.lang.String>();
          }
          result.values_.addAll(other.values_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addValues(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string values = 1;
      public java.util.List<java.lang.String> getValuesList() {
        return java.util.Collections.unmodifiableList(result.values_);
      }
      public int getValuesCount() {
        return result.getValuesCount();
      }
      public java.lang.String getValues(int index) {
        return result.getValues(index);
      }
      public Builder setValues(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.values_.set(index, value);
        return this;
      }
      public Builder addValues(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<java.lang.String>();
        }
        result.values_.add(value);
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.values_);
        return this;
      }
      public Builder clearValues() {
        result.values_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.StringArray)
    }
    
    static {
      defaultInstance = new StringArray(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.StringArray)
  }
  
  public static final class TypedArray extends
      com.google.protobuf.GeneratedMessage {
    // Use TypedArray.newBuilder() to construct.
    private TypedArray() {
      initFields();
    }
    private TypedArray(boolean noInit) {}
    
    private static final TypedArray defaultInstance;
    public static TypedArray getDefaultInstance() {
      return defaultInstance;
    }
    
    public TypedArray getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_TypedArray_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return starling.loopyxl.LoopyXL.internal_static_loopyxl_TypedArray_fieldAccessorTable;
    }
    
    // repeated .loopyxl.TypedObject values = 1;
    public static final int VALUES_FIELD_NUMBER = 1;
    private java.util.List<starling.loopyxl.LoopyXL.TypedObject> values_ =
      java.util.Collections.emptyList();
    public java.util.List<starling.loopyxl.LoopyXL.TypedObject> getValuesList() {
      return values_;
    }
    public int getValuesCount() { return values_.size(); }
    public starling.loopyxl.LoopyXL.TypedObject getValues(int index) {
      return values_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (starling.loopyxl.LoopyXL.TypedObject element : getValuesList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (starling.loopyxl.LoopyXL.TypedObject element : getValuesList()) {
        output.writeMessage(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (starling.loopyxl.LoopyXL.TypedObject element : getValuesList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static starling.loopyxl.LoopyXL.TypedArray parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static starling.loopyxl.LoopyXL.TypedArray parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(starling.loopyxl.LoopyXL.TypedArray prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private starling.loopyxl.LoopyXL.TypedArray result;
      
      // Construct using starling.loopyxl.LoopyXL.TypedArray.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new starling.loopyxl.LoopyXL.TypedArray();
        return builder;
      }
      
      protected starling.loopyxl.LoopyXL.TypedArray internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new starling.loopyxl.LoopyXL.TypedArray();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return starling.loopyxl.LoopyXL.TypedArray.getDescriptor();
      }
      
      public starling.loopyxl.LoopyXL.TypedArray getDefaultInstanceForType() {
        return starling.loopyxl.LoopyXL.TypedArray.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public starling.loopyxl.LoopyXL.TypedArray build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private starling.loopyxl.LoopyXL.TypedArray buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public starling.loopyxl.LoopyXL.TypedArray buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.values_ != java.util.Collections.EMPTY_LIST) {
          result.values_ =
            java.util.Collections.unmodifiableList(result.values_);
        }
        starling.loopyxl.LoopyXL.TypedArray returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof starling.loopyxl.LoopyXL.TypedArray) {
          return mergeFrom((starling.loopyxl.LoopyXL.TypedArray)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(starling.loopyxl.LoopyXL.TypedArray other) {
        if (other == starling.loopyxl.LoopyXL.TypedArray.getDefaultInstance()) return this;
        if (!other.values_.isEmpty()) {
          if (result.values_.isEmpty()) {
            result.values_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedObject>();
          }
          result.values_.addAll(other.values_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              starling.loopyxl.LoopyXL.TypedObject.Builder subBuilder = starling.loopyxl.LoopyXL.TypedObject.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addValues(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated .loopyxl.TypedObject values = 1;
      public java.util.List<starling.loopyxl.LoopyXL.TypedObject> getValuesList() {
        return java.util.Collections.unmodifiableList(result.values_);
      }
      public int getValuesCount() {
        return result.getValuesCount();
      }
      public starling.loopyxl.LoopyXL.TypedObject getValues(int index) {
        return result.getValues(index);
      }
      public Builder setValues(int index, starling.loopyxl.LoopyXL.TypedObject value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.values_.set(index, value);
        return this;
      }
      public Builder setValues(int index, starling.loopyxl.LoopyXL.TypedObject.Builder builderForValue) {
        result.values_.set(index, builderForValue.build());
        return this;
      }
      public Builder addValues(starling.loopyxl.LoopyXL.TypedObject value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedObject>();
        }
        result.values_.add(value);
        return this;
      }
      public Builder addValues(starling.loopyxl.LoopyXL.TypedObject.Builder builderForValue) {
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedObject>();
        }
        result.values_.add(builderForValue.build());
        return this;
      }
      public Builder addAllValues(
          java.lang.Iterable<? extends starling.loopyxl.LoopyXL.TypedObject> values) {
        if (result.values_.isEmpty()) {
          result.values_ = new java.util.ArrayList<starling.loopyxl.LoopyXL.TypedObject>();
        }
        super.addAll(values, result.values_);
        return this;
      }
      public Builder clearValues() {
        result.values_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:loopyxl.TypedArray)
    }
    
    static {
      defaultInstance = new TypedArray(true);
      starling.loopyxl.LoopyXL.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:loopyxl.TypedArray)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_Request_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_Response_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_AuthenticateRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_AuthenticateRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_AuthenticateResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_AuthenticateResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_LookupRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_LookupRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_LookupResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_LookupResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_MethodDefinition_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_MethodDefinition_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_InvocationRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_InvocationRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_InvocationResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_InvocationResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_InvocationValue_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_InvocationValue_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_TypedObject_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_TypedObject_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_DoubleArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_DoubleArray_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_StringArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_StringArray_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_loopyxl_TypedArray_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_loopyxl_TypedArray_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021src/loopyxl.proto\022\007loopyxl\"\305\001\n\007Request" +
      "\022\n\n\002id\030\001 \002(\005\022\"\n\004type\030\002 \002(\0162\024.loopyxl.Mes" +
      "sageType\0222\n\014authenticate\030\003 \001(\0132\034.loopyxl" +
      ".AuthenticateRequest\022&\n\006lookup\030\004 \001(\0132\026.l" +
      "oopyxl.LookupRequest\022.\n\ninvocation\030\005 \001(\013" +
      "2\032.loopyxl.InvocationRequest\"\300\002\n\010Respons" +
      "e\022\n\n\002id\030\001 \002(\005\022\021\n\trequestId\030\002 \002(\005\022\"\n\004type" +
      "\030\003 \002(\0162\024.loopyxl.MessageType\0221\n\006status\030\004" +
      " \002(\0162\030.loopyxl.Response.Status:\007SUCCESS\022" +
      "3\n\014authenticate\030\005 \001(\0132\035.loopyxl.Authenti",
      "cateResponse\022\'\n\006lookup\030\006 \001(\0132\027.loopyxl.L" +
      "ookupResponse\022/\n\ninvocation\030\007 \001(\0132\033.loop" +
      "yxl.InvocationResponse\"/\n\006Status\022\013\n\007SUCC" +
      "ESS\020\000\022\013\n\007FAILURE\020\001\022\013\n\007TIMEOUT\020\002\"%\n\023Authe" +
      "nticateRequest\022\016\n\006ticket\030\001 \002(\014\"\026\n\024Authen" +
      "ticateResponse\"\017\n\rLookupRequest\"@\n\016Looku" +
      "pResponse\022.\n\013definitions\030\001 \003(\0132\031.loopyxl" +
      ".MethodDefinition\"X\n\020MethodDefinition\022\n\n" +
      "\002id\030\001 \002(\005\022\014\n\004name\030\002 \002(\t\022\026\n\016parameterType" +
      "s\030\003 \003(\t\022\022\n\nreturnType\030\004 \002(\t\"S\n\021Invocatio",
      "nRequest\022\020\n\010methodId\030\001 \002(\005\022,\n\nparameters" +
      "\030\002 \003(\0132\030.loopyxl.InvocationValue\">\n\022Invo" +
      "cationResponse\022(\n\006result\030\001 \002(\0132\030.loopyxl" +
      ".InvocationValue\"\231\004\n\017InvocationValue\022+\n\004" +
      "type\030\001 \002(\0162\035.loopyxl.InvocationValue.Typ" +
      "e\022\023\n\013doubleValue\030\002 \001(\001\022\023\n\013doubleArray\030\003 " +
      "\003(\001\022*\n\014doubleMatrix\030\004 \003(\0132\024.loopyxl.Doub" +
      "leArray\022\023\n\013stringValue\030\005 \001(\t\022\023\n\013stringAr" +
      "ray\030\006 \003(\t\022*\n\014stringMatrix\030\007 \003(\0132\024.loopyx" +
      "l.StringArray\022)\n\013objectValue\030\010 \001(\0132\024.loo",
      "pyxl.TypedObject\022)\n\013objectArray\030\t \003(\0132\024." +
      "loopyxl.TypedObject\022)\n\014objectMatrix\030\n \003(" +
      "\0132\023.loopyxl.TypedArray\"\253\001\n\004Type\022\020\n\014DOUBL" +
      "E_VALUE\020\000\022\020\n\014DOUBLE_ARRAY\020\001\022\021\n\rDOUBLE_MA" +
      "TRIX\020\002\022\020\n\014STRING_VALUE\020\003\022\020\n\014STRING_ARRAY" +
      "\020\004\022\021\n\rSTRING_MATRIX\020\005\022\020\n\014OBJECT_VALUE\020\006\022" +
      "\020\n\014OBJECT_ARRAY\020\007\022\021\n\rOBJECT_MATRIX\020\010\"\200\001\n" +
      "\013TypedObject\022\'\n\004type\030\001 \002(\0162\031.loopyxl.Typ" +
      "edObject.Type\022\023\n\013doubleValue\030\002 \001(\001\022\023\n\013st" +
      "ringValue\030\003 \001(\t\"\036\n\004Type\022\n\n\006DOUBLE\020\000\022\n\n\006S",
      "TRING\020\001\"\035\n\013DoubleArray\022\016\n\006values\030\001 \003(\001\"\035" +
      "\n\013StringArray\022\016\n\006values\030\001 \003(\t\"2\n\nTypedAr" +
      "ray\022$\n\006values\030\001 \003(\0132\024.loopyxl.TypedObjec" +
      "t*;\n\013MessageType\022\020\n\014AUTHENTICATE\020\000\022\n\n\006LO" +
      "OKUP\020\001\022\016\n\nINVOCATION\020\002B\035\n\020starling.loopy" +
      "xlB\007LoopyXLH\001"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_loopyxl_Request_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_loopyxl_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_Request_descriptor,
              new java.lang.String[] { "Id", "Type", "Authenticate", "Lookup", "Invocation", },
              starling.loopyxl.LoopyXL.Request.class,
              starling.loopyxl.LoopyXL.Request.Builder.class);
          internal_static_loopyxl_Response_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_loopyxl_Response_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_Response_descriptor,
              new java.lang.String[] { "Id", "RequestId", "Type", "Status", "Authenticate", "Lookup", "Invocation", },
              starling.loopyxl.LoopyXL.Response.class,
              starling.loopyxl.LoopyXL.Response.Builder.class);
          internal_static_loopyxl_AuthenticateRequest_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_loopyxl_AuthenticateRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_AuthenticateRequest_descriptor,
              new java.lang.String[] { "Ticket", },
              starling.loopyxl.LoopyXL.AuthenticateRequest.class,
              starling.loopyxl.LoopyXL.AuthenticateRequest.Builder.class);
          internal_static_loopyxl_AuthenticateResponse_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_loopyxl_AuthenticateResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_AuthenticateResponse_descriptor,
              new java.lang.String[] { },
              starling.loopyxl.LoopyXL.AuthenticateResponse.class,
              starling.loopyxl.LoopyXL.AuthenticateResponse.Builder.class);
          internal_static_loopyxl_LookupRequest_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_loopyxl_LookupRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_LookupRequest_descriptor,
              new java.lang.String[] { },
              starling.loopyxl.LoopyXL.LookupRequest.class,
              starling.loopyxl.LoopyXL.LookupRequest.Builder.class);
          internal_static_loopyxl_LookupResponse_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_loopyxl_LookupResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_LookupResponse_descriptor,
              new java.lang.String[] { "Definitions", },
              starling.loopyxl.LoopyXL.LookupResponse.class,
              starling.loopyxl.LoopyXL.LookupResponse.Builder.class);
          internal_static_loopyxl_MethodDefinition_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_loopyxl_MethodDefinition_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_MethodDefinition_descriptor,
              new java.lang.String[] { "Id", "Name", "ParameterTypes", "ReturnType", },
              starling.loopyxl.LoopyXL.MethodDefinition.class,
              starling.loopyxl.LoopyXL.MethodDefinition.Builder.class);
          internal_static_loopyxl_InvocationRequest_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_loopyxl_InvocationRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_InvocationRequest_descriptor,
              new java.lang.String[] { "MethodId", "Parameters", },
              starling.loopyxl.LoopyXL.InvocationRequest.class,
              starling.loopyxl.LoopyXL.InvocationRequest.Builder.class);
          internal_static_loopyxl_InvocationResponse_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_loopyxl_InvocationResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_InvocationResponse_descriptor,
              new java.lang.String[] { "Result", },
              starling.loopyxl.LoopyXL.InvocationResponse.class,
              starling.loopyxl.LoopyXL.InvocationResponse.Builder.class);
          internal_static_loopyxl_InvocationValue_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_loopyxl_InvocationValue_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_InvocationValue_descriptor,
              new java.lang.String[] { "Type", "DoubleValue", "DoubleArray", "DoubleMatrix", "StringValue", "StringArray", "StringMatrix", "ObjectValue", "ObjectArray", "ObjectMatrix", },
              starling.loopyxl.LoopyXL.InvocationValue.class,
              starling.loopyxl.LoopyXL.InvocationValue.Builder.class);
          internal_static_loopyxl_TypedObject_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_loopyxl_TypedObject_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_TypedObject_descriptor,
              new java.lang.String[] { "Type", "DoubleValue", "StringValue", },
              starling.loopyxl.LoopyXL.TypedObject.class,
              starling.loopyxl.LoopyXL.TypedObject.Builder.class);
          internal_static_loopyxl_DoubleArray_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_loopyxl_DoubleArray_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_DoubleArray_descriptor,
              new java.lang.String[] { "Values", },
              starling.loopyxl.LoopyXL.DoubleArray.class,
              starling.loopyxl.LoopyXL.DoubleArray.Builder.class);
          internal_static_loopyxl_StringArray_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_loopyxl_StringArray_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_StringArray_descriptor,
              new java.lang.String[] { "Values", },
              starling.loopyxl.LoopyXL.StringArray.class,
              starling.loopyxl.LoopyXL.StringArray.Builder.class);
          internal_static_loopyxl_TypedArray_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_loopyxl_TypedArray_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_loopyxl_TypedArray_descriptor,
              new java.lang.String[] { "Values", },
              starling.loopyxl.LoopyXL.TypedArray.class,
              starling.loopyxl.LoopyXL.TypedArray.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
